{"version":3,"sources":["skylark-markups-md-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","objects","filter","baseFindIndex","array","predicate","fromIndex","fromRight","index","baseIsNaN","flatten","result","item","j","push","baseIndexOf","compact","first","items","n","slice","func","inArray","indexOf","makeArray","offset","startWith","concat","merge","second","l","arr","fn","map","elements","callback","key","values","reduce","initialValue","uniq","idx","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","toInteger","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","each","undef","extend","arg","isEqual","includes","collection","guard","nativeMax","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","splice","fallback","prop","safeMixin","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","idCounter","camelCase","toUpperCase","dasherize","deserializeValue","JSON","lowerFirst","charAt","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","v","format","uniqueId","prefix","upperFirst","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","datetimes","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","block","newline","code","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","Lexer","tokens","links","marked","rules","normal","gfm","tables","bullet","_tag","lex","lexer","token","top","bq","loose","cap","bull","space","substring","pedantic","lang","depth","header","align","cells","ordered","smartLists","sanitize","pre","title","charCodeAt","inline","autolink","tag","link","reflink","nolink","strong","em","br","InlineLexer","renderer","Renderer","breaks","Parser","encode","regex","opt","pending","highlight","escaped","message","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","fromCharCode","parser","tok","peek","parseText","row","cell","setOptions","inlineLexer","markdown","repeat","character","blockElements","isBlock","nodeName","voidElements","isVoid","voidSelector","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","findRule","rule","filterValue","nextSibling","parentNode","removeChild","isPre","firstChild","lineBreak","hLevel","Number","headingStyle","underline","lastElementChild","listItem","bulletListMarker","getAttribute","children","indentedCodeBlock","codeBlockStyle","textContent","fencedCodeBlock","language","fence","horizontalRule","inlineLink","linkStyle","referenceLink","reference","linkReferenceStyle","references","append","emphasis","emDelimiter","strongDelimiter","hasSiblings","previousSibling","isCodeBlock","delimiter","leadingSpace","trailingSpace","alt","titlePart","keep","forNode","isBlank","root","JSDOM","_htmlParser","HTMLParser","DOMParser","canParse","parseFromString","canParseHTMLNatively","string","RootNode","input","doc","getElementById","cloneNode","element","prevText","prevVoid","substr","nextNode","collapseWhitespace","Node","isCode","querySelector","hasVoid","flankingWhitespace","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","nodeValue","leadingNewLinesRegExp","trailingNewLinesRegExp","escapes","TurndownService","outerHTML","destination","childNodes","whitespace","string1","string2","newlines","maxNewlines","separator","turndown","canConvert","use","plugin","addRule","accumulator","Turndown","main"],"mappings":"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","file":"../skylark-markups-md-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-markups-md/markdown',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\t\r\n\treturn skylark.attach(\"markups.markdown\",{});\r\n});\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  {\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t}\r\n});\ndefine('skylark-langx/objects',[\r\n    \"./_attach\",\r\n\t\"./types\",\r\n    \"./numbers\"\r\n],function(_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n\r\n\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./objects\"\r\n],function(Deferred,objects){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(klass,arrays,objects,types){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return Evented;\r\n\r\n});\ndefine('skylark-langx/hoster',[\r\n],function(){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  hoster;\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/topic',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn {\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t}\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-markups-md/primitives/marked',[],function() {\r\n  /**\r\n   * marked - a markdown parser\r\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\r\n   * https://github.com/chjj/marked\r\n   */\r\n\r\n  /**\r\n   * Block-Level Grammar\r\n   */\r\n\r\n  var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: noop,\r\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\r\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n    table: noop,\r\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n    text: /^[^\\n]+/\r\n  };\r\n\r\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n  block.item = replace(block.item, 'gm')\r\n    (/bull/g, block.bullet)\r\n    ();\r\n\r\n  block.list = replace(block.list)\r\n    (/bull/g, block.bullet)\r\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\r\n    ('def', '\\\\n+(?=' + block.def.source + ')')\r\n    ();\r\n\r\n  block.blockquote = replace(block.blockquote)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  block._tag = '(?!(?:'\r\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n  block.html = replace(block.html)\r\n    ('comment', /<!--[\\s\\S]*?-->/)\r\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n    (/tag/g, block._tag)\r\n    ();\r\n\r\n  block.paragraph = replace(block.paragraph)\r\n    ('hr', block.hr)\r\n    ('heading', block.heading)\r\n    ('lheading', block.lheading)\r\n    ('blockquote', block.blockquote)\r\n    ('tag', '<' + block._tag)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  /**\r\n   * Normal Block Grammar\r\n   */\r\n\r\n  block.normal = merge({}, block);\r\n\r\n  /**\r\n   * GFM Block Grammar\r\n   */\r\n\r\n  block.gfm = merge({}, block.normal, {\r\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n    paragraph: /^/\r\n  });\r\n\r\n  block.gfm.paragraph = replace(block.paragraph)\r\n    ('(?!', '(?!'\r\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n    ();\r\n\r\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\r\n\r\n  block.tables = merge({}, block.gfm, {\r\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n  });\r\n\r\n  /**\r\n   * Block Lexer\r\n   */\r\n\r\n  function Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = {};\r\n    this.options = options || marked.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.tables) {\r\n        this.rules = block.tables;\r\n      } else {\r\n        this.rules = block.gfm;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Block Rules\r\n   */\r\n\r\n  Lexer.rules = block;\r\n\r\n  /**\r\n   * Static Lex Method\r\n   */\r\n\r\n  Lexer.lex = function(src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n  };\r\n\r\n  /**\r\n   * Preprocessing\r\n   */\r\n\r\n  Lexer.prototype.lex = function(src) {\r\n    src = src\r\n      .replace(/\\r\\n|\\r/g, '\\n')\r\n      .replace(/\\t/g, '    ')\r\n      .replace(/\\u00a0/g, ' ')\r\n      .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n  };\r\n\r\n  /**\r\n   * Lexing\r\n   */\r\n\r\n  Lexer.prototype.token = function(src, top, bq) {\r\n    var src = src.replace(/^ +$/gm, '')\r\n      , next\r\n      , loose\r\n      , cap\r\n      , bull\r\n      , b\r\n      , item\r\n      , space\r\n      , i\r\n      , l;\r\n\r\n    while (src) {\r\n      // newline\r\n      if (cap = this.rules.newline.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[0].length > 1) {\r\n          this.tokens.push({\r\n            type: 'space'\r\n          });\r\n        }\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        cap = cap[0].replace(/^ {4}/gm, '');\r\n        this.tokens.push({\r\n          type: 'code',\r\n          text: !this.options.pedantic\r\n            ? cap.replace(/\\n+$/, '')\r\n            : cap\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // fences (gfm)\r\n      if (cap = this.rules.fences.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'code',\r\n          lang: cap[2],\r\n          text: cap[3]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // heading\r\n      if (cap = this.rules.heading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[1].length,\r\n          text: cap[2]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // table no leading pipe (gfm)\r\n      if (top && (cap = this.rules.nptable.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i].split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // lheading\r\n      if (cap = this.rules.lheading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[2] === '=' ? 1 : 2,\r\n          text: cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // hr\r\n      if (cap = this.rules.hr.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'hr'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // blockquote\r\n      if (cap = this.rules.blockquote.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_start'\r\n        });\r\n\r\n        cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n        // Pass `top` to keep the current\r\n        // \"toplevel\" state. This is exactly\r\n        // how markdown.pl works.\r\n        this.token(cap, top, true);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // list\r\n      if (cap = this.rules.list.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        bull = cap[2];\r\n\r\n        this.tokens.push({\r\n          type: 'list_start',\r\n          ordered: bull.length > 1\r\n        });\r\n\r\n        // Get each top-level item.\r\n        cap = cap[0].match(this.rules.item);\r\n\r\n        next = false;\r\n        l = cap.length;\r\n        i = 0;\r\n\r\n        for (; i < l; i++) {\r\n          item = cap[i];\r\n\r\n          // Remove the list item's bullet\r\n          // so it is seen as the next token.\r\n          space = item.length;\r\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n          // Outdent whatever the\r\n          // list item contains. Hacky.\r\n          if (~item.indexOf('\\n ')) {\r\n            space -= item.length;\r\n            item = !this.options.pedantic\r\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n              : item.replace(/^ {1,4}/gm, '');\r\n          }\r\n\r\n          // Determine whether the next list item belongs here.\r\n          // Backpedal if it does not belong in this list.\r\n          if (this.options.smartLists && i !== l - 1) {\r\n            b = block.bullet.exec(cap[i + 1])[0];\r\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n              src = cap.slice(i + 1).join('\\n') + src;\r\n              i = l - 1;\r\n            }\r\n          }\r\n\r\n          // Determine whether item is loose or not.\r\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n          // for discount behavior.\r\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n          if (i !== l - 1) {\r\n            next = item.charAt(item.length - 1) === '\\n';\r\n            if (!loose) loose = next;\r\n          }\r\n\r\n          this.tokens.push({\r\n            type: loose\r\n              ? 'loose_item_start'\r\n              : 'list_item_start'\r\n          });\r\n\r\n          // Recurse.\r\n          this.token(item, false, bq);\r\n\r\n          this.tokens.push({\r\n            type: 'list_item_end'\r\n          });\r\n        }\r\n\r\n        this.tokens.push({\r\n          type: 'list_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // html\r\n      if (cap = this.rules.html.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: this.options.sanitize\r\n            ? 'paragraph'\r\n            : 'html',\r\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // def\r\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.links[cap[1].toLowerCase()] = {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        };\r\n        continue;\r\n      }\r\n\r\n      // table (gfm)\r\n      if (top && (cap = this.rules.table.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i]\r\n            .replace(/^ *\\| *| *\\| *$/g, '')\r\n            .split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // top-level paragraph\r\n      if (top && (cap = this.rules.paragraph.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'paragraph',\r\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n            ? cap[1].slice(0, -1)\r\n            : cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        // Top-level should never reach here.\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'text',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return this.tokens;\r\n  };\r\n\r\n  /**\r\n   * Inline-Level Grammar\r\n   */\r\n\r\n  var inline = {\r\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n    url: noop,\r\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n    link: /^!?\\[(inside)\\]\\(href\\)/,\r\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n    br: /^ {2,}\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n  };\r\n\r\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n  inline.link = replace(inline.link)\r\n    ('inside', inline._inside)\r\n    ('href', inline._href)\r\n    ();\r\n\r\n  inline.reflink = replace(inline.reflink)\r\n    ('inside', inline._inside)\r\n    ();\r\n\r\n  /**\r\n   * Normal Inline Grammar\r\n   */\r\n\r\n  inline.normal = merge({}, inline);\r\n\r\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\r\n\r\n  inline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n  });\r\n\r\n  /**\r\n   * GFM Inline Grammar\r\n   */\r\n\r\n  inline.gfm = merge({}, inline.normal, {\r\n    escape: replace(inline.escape)('])', '~|])')(),\r\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n    text: replace(inline.text)\r\n      (']|', '~]|')\r\n      ('|', '|https?://|')\r\n      ()\r\n  });\r\n\r\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\r\n\r\n  inline.breaks = merge({}, inline.gfm, {\r\n    br: replace(inline.br)('{2,}', '*')(),\r\n    text: replace(inline.gfm.text)('{2,}', '*')()\r\n  });\r\n\r\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\r\n\r\n  function InlineLexer(links, options) {\r\n    this.options = options || marked.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer;\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n      throw new\r\n        Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.breaks) {\r\n        this.rules = inline.breaks;\r\n      } else {\r\n        this.rules = inline.gfm;\r\n      }\r\n    } else if (this.options.pedantic) {\r\n      this.rules = inline.pedantic;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Inline Rules\r\n   */\r\n\r\n  InlineLexer.rules = inline;\r\n\r\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\r\n\r\n  InlineLexer.output = function(src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n  };\r\n\r\n  /**\r\n   * Lexing/Compiling\r\n   */\r\n\r\n  InlineLexer.prototype.output = function(src) {\r\n    var out = ''\r\n      , link\r\n      , text\r\n      , href\r\n      , cap;\r\n\r\n    while (src) {\r\n      // escape\r\n      if (cap = this.rules.escape.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += cap[1];\r\n        continue;\r\n      }\r\n\r\n      // autolink\r\n      if (cap = this.rules.autolink.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[2] === '@') {\r\n          text = cap[1].charAt(6) === ':'\r\n            ? this.mangle(cap[1].substring(7))\r\n            : this.mangle(cap[1]);\r\n          href = this.mangle('mailto:') + text;\r\n        } else {\r\n          text = escape(cap[1]);\r\n          href = text;\r\n        }\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // url (gfm)\r\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        text = escape(cap[1]);\r\n        href = text;\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // tag\r\n      if (cap = this.rules.tag.exec(src)) {\r\n        if (!this.inLink && /^<a /i.test(cap[0])) {\r\n          this.inLink = true;\r\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n          this.inLink = false;\r\n        }\r\n        src = src.substring(cap[0].length);\r\n        out += this.options.sanitize\r\n          ? escape(cap[0])\r\n          : cap[0];\r\n        continue;\r\n      }\r\n\r\n      // link\r\n      if (cap = this.rules.link.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        });\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // reflink, nolink\r\n      if ((cap = this.rules.reflink.exec(src))\r\n          || (cap = this.rules.nolink.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n        link = this.links[link.toLowerCase()];\r\n        if (!link || !link.href) {\r\n          out += cap[0].charAt(0);\r\n          src = cap[0].substring(1) + src;\r\n          continue;\r\n        }\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, link);\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // strong\r\n      if (cap = this.rules.strong.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // em\r\n      if (cap = this.rules.em.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.codespan(escape(cap[2], true));\r\n        continue;\r\n      }\r\n\r\n      // br\r\n      if (cap = this.rules.br.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.br();\r\n        continue;\r\n      }\r\n\r\n      // del (gfm)\r\n      if (cap = this.rules.del.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.del(this.output(cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += escape(this.smartypants(cap[0]));\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Compile Link\r\n   */\r\n\r\n  InlineLexer.prototype.outputLink = function(cap, link) {\r\n    var href = escape(link.href)\r\n      , title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n      ? this.renderer.link(href, title, this.output(cap[1]))\r\n      : this.renderer.image(href, title, escape(cap[1]));\r\n  };\r\n\r\n  /**\r\n   * Smartypants Transformations\r\n   */\r\n\r\n  InlineLexer.prototype.smartypants = function(text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n      // em-dashes\r\n      .replace(/--/g, '\\u2014')\r\n      // opening singles\r\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n      // closing singles & apostrophes\r\n      .replace(/'/g, '\\u2019')\r\n      // opening doubles\r\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n      // closing doubles\r\n      .replace(/\"/g, '\\u201d')\r\n      // ellipses\r\n      .replace(/\\.{3}/g, '\\u2026');\r\n  };\r\n\r\n  /**\r\n   * Mangle Links\r\n   */\r\n\r\n  InlineLexer.prototype.mangle = function(text) {\r\n    var out = ''\r\n      , l = text.length\r\n      , i = 0\r\n      , ch;\r\n\r\n    for (; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      if (Math.random() > 0.5) {\r\n        ch = 'x' + ch.toString(16);\r\n      }\r\n      out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Renderer\r\n   */\r\n\r\n  function Renderer(options) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  Renderer.prototype.code = function(code, lang, escaped) {\r\n    if (this.options.highlight) {\r\n      var out = this.options.highlight(code, lang);\r\n      if (out != null && out !== code) {\r\n        escaped = true;\r\n        code = out;\r\n      }\r\n    }\r\n\r\n    if (!lang) {\r\n      return '<pre><code>'\r\n        + (escaped ? code : escape(code, true))\r\n        + '\\n</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n      + this.options.langPrefix\r\n      + escape(lang, true)\r\n      + '\">'\r\n      + (escaped ? code : escape(code, true))\r\n      + '\\n</code></pre>\\n';\r\n  };\r\n\r\n  Renderer.prototype.blockquote = function(quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n  };\r\n\r\n  Renderer.prototype.html = function(html) {\r\n    return html;\r\n  };\r\n\r\n  Renderer.prototype.heading = function(text, level, raw) {\r\n    return '<h'\r\n      + level\r\n      + ' id=\"'\r\n      + this.options.headerPrefix\r\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\r\n      + '\">'\r\n      + text\r\n      + '</h'\r\n      + level\r\n      + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.hr = function() {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.list = function(body, ordered) {\r\n    var type = ordered ? 'ol' : 'ul';\r\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.listitem = function(text) {\r\n    return '<li>' + text + '</li>\\n';\r\n  };\r\n\r\n  Renderer.prototype.paragraph = function(text) {\r\n    return '<p>' + text + '</p>\\n';\r\n  };\r\n\r\n  Renderer.prototype.table = function(header, body) {\r\n    return '<table>\\n'\r\n      + '<thead>\\n'\r\n      + header\r\n      + '</thead>\\n'\r\n      + '<tbody>\\n'\r\n      + body\r\n      + '</tbody>\\n'\r\n      + '</table>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablerow = function(content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablecell = function(content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\r\n      : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n  };\r\n\r\n  // span level renderer\r\n  Renderer.prototype.strong = function(text) {\r\n    return '<strong>' + text + '</strong>';\r\n  };\r\n\r\n  Renderer.prototype.em = function(text) {\r\n    return '<em>' + text + '</em>';\r\n  };\r\n\r\n  Renderer.prototype.codespan = function(text) {\r\n    return '<code>' + text + '</code>';\r\n  };\r\n\r\n  Renderer.prototype.br = function() {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n  };\r\n\r\n  Renderer.prototype.del = function(text) {\r\n    return '<del>' + text + '</del>';\r\n  };\r\n\r\n  Renderer.prototype.link = function(href, title, text) {\r\n    if (this.options.sanitize) {\r\n      try {\r\n        var prot = decodeURIComponent(unescape(href))\r\n          .replace(/[^\\w:]/g, '')\r\n          .toLowerCase();\r\n      } catch (e) {\r\n        return '';\r\n      }\r\n      if (prot.indexOf('javascript:') === 0) {\r\n        return '';\r\n      }\r\n    }\r\n    var out = '<a href=\"' + href + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n  };\r\n\r\n  Renderer.prototype.image = function(href, title, text) {\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Parsing & Compiling\r\n   */\r\n\r\n  function Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || marked.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer;\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n  }\r\n\r\n  /**\r\n   * Static Parse Method\r\n   */\r\n\r\n  Parser.parse = function(src, options, renderer) {\r\n    var parser = new Parser(options, renderer);\r\n    return parser.parse(src);\r\n  };\r\n\r\n  /**\r\n   * Parse Loop\r\n   */\r\n\r\n  Parser.prototype.parse = function(src) {\r\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n      out += this.tok();\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Next Token\r\n   */\r\n\r\n  Parser.prototype.next = function() {\r\n    return this.token = this.tokens.pop();\r\n  };\r\n\r\n  /**\r\n   * Preview Next Token\r\n   */\r\n\r\n  Parser.prototype.peek = function() {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n  };\r\n\r\n  /**\r\n   * Parse Text Tokens\r\n   */\r\n\r\n  Parser.prototype.parseText = function() {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n      body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n  };\r\n\r\n  /**\r\n   * Parse Current Token\r\n   */\r\n\r\n  Parser.prototype.tok = function() {\r\n    switch (this.token.type) {\r\n      case 'space': {\r\n        return '';\r\n      }\r\n      case 'hr': {\r\n        return this.renderer.hr();\r\n      }\r\n      case 'heading': {\r\n        return this.renderer.heading(\r\n          this.inline.output(this.token.text),\r\n          this.token.depth,\r\n          this.token.text);\r\n      }\r\n      case 'code': {\r\n        return this.renderer.code(this.token.text,\r\n          this.token.lang,\r\n          this.token.escaped);\r\n      }\r\n      case 'table': {\r\n        var header = ''\r\n          , body = ''\r\n          , i\r\n          , row\r\n          , cell\r\n          , flags\r\n          , j;\r\n\r\n        // header\r\n        cell = '';\r\n        for (i = 0; i < this.token.header.length; i++) {\r\n          flags = { header: true, align: this.token.align[i] };\r\n          cell += this.renderer.tablecell(\r\n            this.inline.output(this.token.header[i]),\r\n            { header: true, align: this.token.align[i] }\r\n          );\r\n        }\r\n        header += this.renderer.tablerow(cell);\r\n\r\n        for (i = 0; i < this.token.cells.length; i++) {\r\n          row = this.token.cells[i];\r\n\r\n          cell = '';\r\n          for (j = 0; j < row.length; j++) {\r\n            cell += this.renderer.tablecell(\r\n              this.inline.output(row[j]),\r\n              { header: false, align: this.token.align[j] }\r\n            );\r\n          }\r\n\r\n          body += this.renderer.tablerow(cell);\r\n        }\r\n        return this.renderer.table(header, body);\r\n      }\r\n      case 'blockquote_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'blockquote_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.blockquote(body);\r\n      }\r\n      case 'list_start': {\r\n        var body = ''\r\n          , ordered = this.token.ordered;\r\n\r\n        while (this.next().type !== 'list_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.list(body, ordered);\r\n      }\r\n      case 'list_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.token.type === 'text'\r\n            ? this.parseText()\r\n            : this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'loose_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'html': {\r\n        var html = !this.token.pre && !this.options.pedantic\r\n          ? this.inline.output(this.token.text)\r\n          : this.token.text;\r\n        return this.renderer.html(html);\r\n      }\r\n      case 'paragraph': {\r\n        return this.renderer.paragraph(this.inline.output(this.token.text));\r\n      }\r\n      case 'text': {\r\n        return this.renderer.paragraph(this.parseText());\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  function escape(html, encode) {\r\n    return html\r\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;');\r\n  }\r\n\r\n  function unescape(html) {\r\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\r\n      n = n.toLowerCase();\r\n      if (n === 'colon') return ':';\r\n      if (n.charAt(0) === '#') {\r\n        return n.charAt(1) === 'x'\r\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n          : String.fromCharCode(+n.substring(1));\r\n      }\r\n      return '';\r\n    });\r\n  }\r\n\r\n  function replace(regex, opt) {\r\n    regex = regex.source;\r\n    opt = opt || '';\r\n    return function self(name, val) {\r\n      if (!name) return new RegExp(regex, opt);\r\n      val = val.source || val;\r\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n      regex = regex.replace(name, val);\r\n      return self;\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n  noop.exec = noop;\r\n\r\n  function merge(obj) {\r\n    var i = 1\r\n      , target\r\n      , key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n      target = arguments[i];\r\n      for (key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n          obj[key] = target[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  /**\r\n   * Marked\r\n   */\r\n\r\n  function marked(src, opt, callback) {\r\n    if (callback || typeof opt === 'function') {\r\n      if (!callback) {\r\n        callback = opt;\r\n        opt = null;\r\n      }\r\n\r\n      opt = merge({}, marked.defaults, opt || {});\r\n\r\n      var highlight = opt.highlight\r\n        , tokens\r\n        , pending\r\n        , i = 0;\r\n\r\n      try {\r\n        tokens = Lexer.lex(src, opt)\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n\r\n      pending = tokens.length;\r\n\r\n      var done = function(err) {\r\n        if (err) {\r\n          opt.highlight = highlight;\r\n          return callback(err);\r\n        }\r\n\r\n        var out;\r\n\r\n        try {\r\n          out = Parser.parse(tokens, opt);\r\n        } catch (e) {\r\n          err = e;\r\n        }\r\n\r\n        opt.highlight = highlight;\r\n\r\n        return err\r\n          ? callback(err)\r\n          : callback(null, out);\r\n      };\r\n\r\n      if (!highlight || highlight.length < 3) {\r\n        return done();\r\n      }\r\n\r\n      delete opt.highlight;\r\n\r\n      if (!pending) return done();\r\n\r\n      for (; i < tokens.length; i++) {\r\n        (function(token) {\r\n          if (token.type !== 'code') {\r\n            return --pending || done();\r\n          }\r\n          return highlight(token.text, token.lang, function(err, code) {\r\n            if (err) return done(err);\r\n            if (code == null || code === token.text) {\r\n              return --pending || done();\r\n            }\r\n            token.text = code;\r\n            token.escaped = true;\r\n            --pending || done();\r\n          });\r\n        })(tokens[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    try {\r\n      if (opt) opt = merge({}, marked.defaults, opt);\r\n      return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n      if ((opt || marked.defaults).silent) {\r\n        return '<p>An error occured:</p><pre>'\r\n          + escape(e.message + '', true)\r\n          + '</pre>';\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Options\r\n   */\r\n\r\n  marked.options =\r\n  marked.setOptions = function(opt) {\r\n    merge(marked.defaults, opt);\r\n    return marked;\r\n  };\r\n\r\n  marked.defaults = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: false,\r\n    silent: false,\r\n    highlight: null,\r\n    langPrefix: 'lang-',\r\n    smartypants: false,\r\n    headerPrefix: '',\r\n    renderer: new Renderer,\r\n    xhtml: false\r\n  };\r\n\r\n  /**\r\n   * Expose\r\n   */\r\n\r\n  marked.Parser = Parser;\r\n  marked.parser = Parser.parse;\r\n\r\n  marked.Renderer = Renderer;\r\n\r\n  marked.Lexer = Lexer;\r\n  marked.lexer = Lexer.lex;\r\n\r\n  marked.InlineLexer = InlineLexer;\r\n  marked.inlineLexer = InlineLexer.output;\r\n\r\n  marked.parse = marked;\r\n\r\n  return marked;\r\n});\ndefine('skylark-markups-md/Parser',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/marked\"\r\n], function(langx,markdown, marked) {\r\n\tvar Parser = marked.Parser;\r\n\r\n   langx.mixin(Parser,marked);\r\n\r\n   return Parser ;\r\n});\ndefine('skylark-markups-md/primitives/turndown',[],function () { \r\n  'use strict';\r\n\r\n  // original version : 5.0.1\r\n  function extend (destination) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\r\n      }\r\n    }\r\n    return destination\r\n  }\r\n\r\n  function repeat (character, count) {\r\n    return Array(count + 1).join(character)\r\n  }\r\n\r\n  var blockElements = [\r\n    'address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas',\r\n    'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\r\n    'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\r\n    'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\r\n    'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\r\n  ];\r\n\r\n  function isBlock (node) {\r\n    return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidElements = [\r\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\r\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\r\n  ];\r\n\r\n  function isVoid (node) {\r\n    return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidSelector = voidElements.join();\r\n  function hasVoid (node) {\r\n    return node.querySelector && node.querySelector(voidSelector)\r\n  }\r\n\r\n  var rules = {};\r\n\r\n  rules.paragraph = {\r\n    filter: 'p',\r\n\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.lineBreak = {\r\n    filter: 'br',\r\n\r\n    replacement: function (content, node, options) {\r\n      return options.br + '\\n'\r\n    }\r\n  };\r\n\r\n  rules.heading = {\r\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n    replacement: function (content, node, options) {\r\n      var hLevel = Number(node.nodeName.charAt(1));\r\n\r\n      if (options.headingStyle === 'setext' && hLevel < 3) {\r\n        var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\r\n        return (\r\n          '\\n\\n' + content + '\\n' + underline + '\\n\\n'\r\n        )\r\n      } else {\r\n        return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.blockquote = {\r\n    filter: 'blockquote',\r\n\r\n    replacement: function (content) {\r\n      content = content.replace(/^\\n+|\\n+$/g, '');\r\n      content = content.replace(/^/gm, '> ');\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.list = {\r\n    filter: ['ul', 'ol'],\r\n\r\n    replacement: function (content, node) {\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\r\n        return '\\n' + content\r\n      } else {\r\n        return '\\n\\n' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.listItem = {\r\n    filter: 'li',\r\n\r\n    replacement: function (content, node, options) {\r\n      content = content\r\n        .replace(/^\\n+/, '') // remove leading newlines\r\n        .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\r\n        .replace(/\\n/gm, '\\n    '); // indent\r\n      var prefix = options.bulletListMarker + '   ';\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'OL') {\r\n        var start = parent.getAttribute('start');\r\n        var index = Array.prototype.indexOf.call(parent.children, node);\r\n        prefix = (start ? Number(start) + index : index + 1) + '.  ';\r\n      }\r\n      return (\r\n        prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.indentedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'indented' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      return (\r\n        '\\n\\n    ' +\r\n        node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\r\n        '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.fencedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'fenced' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var className = node.firstChild.className || '';\r\n      var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\r\n\r\n      return (\r\n        '\\n\\n' + options.fence + language + '\\n' +\r\n        node.firstChild.textContent +\r\n        '\\n' + options.fence + '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.horizontalRule = {\r\n    filter: 'hr',\r\n\r\n    replacement: function (content, node, options) {\r\n      return '\\n\\n' + options.hr + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.inlineLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'inlined' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      return '[' + content + '](' + href + title + ')'\r\n    }\r\n  };\r\n\r\n  rules.referenceLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'referenced' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      var replacement;\r\n      var reference;\r\n\r\n      switch (options.linkReferenceStyle) {\r\n        case 'collapsed':\r\n          replacement = '[' + content + '][]';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        case 'shortcut':\r\n          replacement = '[' + content + ']';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        default:\r\n          var id = this.references.length + 1;\r\n          replacement = '[' + content + '][' + id + ']';\r\n          reference = '[' + id + ']: ' + href + title;\r\n      }\r\n\r\n      this.references.push(reference);\r\n      return replacement\r\n    },\r\n\r\n    references: [],\r\n\r\n    append: function (options) {\r\n      var references = '';\r\n      if (this.references.length) {\r\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\r\n        this.references = []; // Reset references\r\n      }\r\n      return references\r\n    }\r\n  };\r\n\r\n  rules.emphasis = {\r\n    filter: ['em', 'i'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.emDelimiter + content + options.emDelimiter\r\n    }\r\n  };\r\n\r\n  rules.strong = {\r\n    filter: ['strong', 'b'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.strongDelimiter + content + options.strongDelimiter\r\n    }\r\n  };\r\n\r\n  rules.code = {\r\n    filter: function (node) {\r\n      var hasSiblings = node.previousSibling || node.nextSibling;\r\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\r\n\r\n      return node.nodeName === 'CODE' && !isCodeBlock\r\n    },\r\n\r\n    replacement: function (content) {\r\n      if (!content.trim()) return ''\r\n\r\n      var delimiter = '`';\r\n      var leadingSpace = '';\r\n      var trailingSpace = '';\r\n      var matches = content.match(/`+/gm);\r\n      if (matches) {\r\n        if (/^`/.test(content)) leadingSpace = ' ';\r\n        if (/`$/.test(content)) trailingSpace = ' ';\r\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\r\n      }\r\n\r\n      return delimiter + leadingSpace + content + trailingSpace + delimiter\r\n    }\r\n  };\r\n\r\n  rules.image = {\r\n    filter: 'img',\r\n\r\n    replacement: function (content, node) {\r\n      var alt = node.alt || '';\r\n      var src = node.getAttribute('src') || '';\r\n      var title = node.title || '';\r\n      var titlePart = title ? ' \"' + title + '\"' : '';\r\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manages a collection of rules used to convert HTML to Markdown\r\n   */\r\n\r\n  function Rules (options) {\r\n    this.options = options;\r\n    this._keep = [];\r\n    this._remove = [];\r\n\r\n    this.blankRule = {\r\n      replacement: options.blankReplacement\r\n    };\r\n\r\n    this.keepReplacement = options.keepReplacement;\r\n\r\n    this.defaultRule = {\r\n      replacement: options.defaultReplacement\r\n    };\r\n\r\n    this.array = [];\r\n    for (var key in options.rules) this.array.push(options.rules[key]);\r\n  }\r\n\r\n  Rules.prototype = {\r\n    add: function (key, rule) {\r\n      this.array.unshift(rule);\r\n    },\r\n\r\n    keep: function (filter) {\r\n      this._keep.unshift({\r\n        filter: filter,\r\n        replacement: this.keepReplacement\r\n      });\r\n    },\r\n\r\n    remove: function (filter) {\r\n      this._remove.unshift({\r\n        filter: filter,\r\n        replacement: function () {\r\n          return ''\r\n        }\r\n      });\r\n    },\r\n\r\n    forNode: function (node) {\r\n      if (node.isBlank) return this.blankRule\r\n      var rule;\r\n\r\n      if ((rule = findRule(this.array, node, this.options))) return rule\r\n      if ((rule = findRule(this._keep, node, this.options))) return rule\r\n      if ((rule = findRule(this._remove, node, this.options))) return rule\r\n\r\n      return this.defaultRule\r\n    },\r\n\r\n    forEach: function (fn) {\r\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\r\n    }\r\n  };\r\n\r\n  function findRule (rules, node, options) {\r\n    for (var i = 0; i < rules.length; i++) {\r\n      var rule = rules[i];\r\n      if (filterValue(rule, node, options)) return rule\r\n    }\r\n    return void 0\r\n  }\r\n\r\n  function filterValue (rule, node, options) {\r\n    var filter = rule.filter;\r\n    if (typeof filter === 'string') {\r\n      if (filter === node.nodeName.toLowerCase()) return true\r\n    } else if (Array.isArray(filter)) {\r\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\r\n    } else if (typeof filter === 'function') {\r\n      if (filter.call(rule, node, options)) return true\r\n    } else {\r\n      throw new TypeError('`filter` needs to be a string, array, or function')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The collapseWhitespace function is adapted from collapse-whitespace\r\n   * by Luc Thevenard.\r\n   *\r\n   * The MIT License (MIT)\r\n   *\r\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to deal\r\n   * in the Software without restriction, including without limitation the rights\r\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in\r\n   * all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n   * THE SOFTWARE.\r\n   */\r\n\r\n  /**\r\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  function collapseWhitespace (options) {\r\n    var element = options.element;\r\n    var isBlock = options.isBlock;\r\n    var isVoid = options.isVoid;\r\n    var isPre = options.isPre || function (node) {\r\n      return node.nodeName === 'PRE'\r\n    };\r\n\r\n    if (!element.firstChild || isPre(element)) return\r\n\r\n    var prevText = null;\r\n    var prevVoid = false;\r\n\r\n    var prev = null;\r\n    var node = next(prev, element, isPre);\r\n\r\n    while (node !== element) {\r\n      if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\r\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\r\n\r\n        if ((!prevText || / $/.test(prevText.data)) &&\r\n            !prevVoid && text[0] === ' ') {\r\n          text = text.substr(1);\r\n        }\r\n\r\n        // `text` might be empty at this point.\r\n        if (!text) {\r\n          node = remove(node);\r\n          continue\r\n        }\r\n\r\n        node.data = text;\r\n\r\n        prevText = node;\r\n      } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\r\n        if (isBlock(node) || node.nodeName === 'BR') {\r\n          if (prevText) {\r\n            prevText.data = prevText.data.replace(/ $/, '');\r\n          }\r\n\r\n          prevText = null;\r\n          prevVoid = false;\r\n        } else if (isVoid(node)) {\r\n          // Avoid trimming space around non-block, non-BR void elements.\r\n          prevText = null;\r\n          prevVoid = true;\r\n        }\r\n      } else {\r\n        node = remove(node);\r\n        continue\r\n      }\r\n\r\n      var nextNode = next(prev, node, isPre);\r\n      prev = node;\r\n      node = nextNode;\r\n    }\r\n\r\n    if (prevText) {\r\n      prevText.data = prevText.data.replace(/ $/, '');\r\n      if (!prevText.data) {\r\n        remove(prevText);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove(node) removes the given node from the DOM and returns the\r\n   * next node in the sequence.\r\n   *\r\n   * @param {Node} node\r\n   * @return {Node} node\r\n   */\r\n  function remove (node) {\r\n    var next = node.nextSibling || node.parentNode;\r\n\r\n    node.parentNode.removeChild(node);\r\n\r\n    return next\r\n  }\r\n\r\n  /**\r\n   * next(prev, current, isPre) returns the next node in the sequence, given the\r\n   * current and previous nodes.\r\n   *\r\n   * @param {Node} prev\r\n   * @param {Node} current\r\n   * @param {Function} isPre\r\n   * @return {Node}\r\n   */\r\n  function next (prev, current, isPre) {\r\n    if ((prev && prev.parentNode === current) || isPre(current)) {\r\n      return current.nextSibling || current.parentNode\r\n    }\r\n\r\n    return current.firstChild || current.nextSibling || current.parentNode\r\n  }\r\n\r\n  /*\r\n   * Set up window for Node.js\r\n   */\r\n\r\n  var root = (typeof window !== 'undefined' ? window : {});\r\n\r\n  /*\r\n   * Parsing HTML strings\r\n   */\r\n\r\n  function canParseHTMLNatively () {\r\n    var Parser = root.DOMParser;\r\n    var canParse = false;\r\n\r\n    // Adapted from https://gist.github.com/1129031\r\n    // Firefox/Opera/IE throw errors on unsupported types\r\n    try {\r\n      // WebKit returns null on unsupported types\r\n      if (new Parser().parseFromString('', 'text/html')) {\r\n        canParse = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    return canParse\r\n  }\r\n\r\n  function createHTMLParser () {\r\n    var Parser = function () {};\r\n\r\n    {\r\n      var JSDOM = require('jsdom').JSDOM;\r\n      Parser.prototype.parseFromString = function (string) {\r\n        return new JSDOM(string).window.document\r\n      };\r\n    }\r\n    return Parser\r\n  }\r\n\r\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\r\n\r\n  function RootNode (input) {\r\n    var root;\r\n    if (typeof input === 'string') {\r\n      var doc = htmlParser().parseFromString(\r\n        // DOM parsers arrange elements in the <head> and <body>.\r\n        // Wrapping in a custom element ensures elements are reliably arranged in\r\n        // a single element.\r\n        '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\r\n        'text/html'\r\n      );\r\n      root = doc.getElementById('turndown-root');\r\n    } else {\r\n      root = input.cloneNode(true);\r\n    }\r\n    collapseWhitespace({\r\n      element: root,\r\n      isBlock: isBlock,\r\n      isVoid: isVoid\r\n    });\r\n\r\n    return root\r\n  }\r\n\r\n  var _htmlParser;\r\n  function htmlParser () {\r\n    _htmlParser = _htmlParser || new HTMLParser();\r\n    return _htmlParser\r\n  }\r\n\r\n  function Node (node) {\r\n    node.isBlock = isBlock(node);\r\n    node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\r\n    node.isBlank = isBlank(node);\r\n    node.flankingWhitespace = flankingWhitespace(node);\r\n    return node\r\n  }\r\n\r\n  function isBlank (node) {\r\n    return (\r\n      ['A', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'].indexOf(node.nodeName) === -1 &&\r\n      /^\\s*$/i.test(node.textContent) &&\r\n      !isVoid(node) &&\r\n      !hasVoid(node)\r\n    )\r\n  }\r\n\r\n  function flankingWhitespace (node) {\r\n    var leading = '';\r\n    var trailing = '';\r\n\r\n    if (!node.isBlock) {\r\n      var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent);\r\n      var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent);\r\n\r\n      if (hasLeading && !isFlankedByWhitespace('left', node)) {\r\n        leading = ' ';\r\n      }\r\n      if (hasTrailing && !isFlankedByWhitespace('right', node)) {\r\n        trailing = ' ';\r\n      }\r\n    }\r\n\r\n    return { leading: leading, trailing: trailing }\r\n  }\r\n\r\n  function isFlankedByWhitespace (side, node) {\r\n    var sibling;\r\n    var regExp;\r\n    var isFlanked;\r\n\r\n    if (side === 'left') {\r\n      sibling = node.previousSibling;\r\n      regExp = / $/;\r\n    } else {\r\n      sibling = node.nextSibling;\r\n      regExp = /^ /;\r\n    }\r\n\r\n    if (sibling) {\r\n      if (sibling.nodeType === 3) {\r\n        isFlanked = regExp.test(sibling.nodeValue);\r\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\r\n        isFlanked = regExp.test(sibling.textContent);\r\n      }\r\n    }\r\n    return isFlanked\r\n  }\r\n\r\n  var reduce = Array.prototype.reduce;\r\n  var leadingNewLinesRegExp = /^\\n*/;\r\n  var trailingNewLinesRegExp = /\\n*$/;\r\n  var escapes = [\r\n    [/\\\\/g, '\\\\\\\\'],\r\n    [/\\*/g, '\\\\*'],\r\n    [/^-/g, '\\\\-'],\r\n    [/^\\+ /g, '\\\\+ '],\r\n    [/^(=+)/g, '\\\\$1'],\r\n    [/^(#{1,6}) /g, '\\\\$1 '],\r\n    [/`/g, '\\\\`'],\r\n    [/^~~~/g, '\\\\~~~'],\r\n    [/\\[/g, '\\\\['],\r\n    [/\\]/g, '\\\\]'],\r\n    [/^>/g, '\\\\>'],\r\n    [/_/g, '\\\\_'],\r\n    [/^(\\d+)\\. /g, '$1\\\\. ']\r\n  ];\r\n\r\n  function TurndownService (options) {\r\n    if (!(this instanceof TurndownService)) return new TurndownService(options)\r\n\r\n    var defaults = {\r\n      rules: rules,\r\n      headingStyle: 'setext',\r\n      hr: '* * *',\r\n      bulletListMarker: '*',\r\n      codeBlockStyle: 'indented',\r\n      fence: '```',\r\n      emDelimiter: '_',\r\n      strongDelimiter: '**',\r\n      linkStyle: 'inlined',\r\n      linkReferenceStyle: 'full',\r\n      br: '  ',\r\n      blankReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' : ''\r\n      },\r\n      keepReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\r\n      },\r\n      defaultReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\r\n      }\r\n    };\r\n    this.options = extend({}, defaults, options);\r\n    this.rules = new Rules(this.options);\r\n  }\r\n\r\n  TurndownService.prototype = {\r\n    /**\r\n     * The entry point for converting a string or DOM node to Markdown\r\n     * @public\r\n     * @param {String|HTMLElement} input The string or DOM node to convert\r\n     * @returns A Markdown representation of the input\r\n     * @type String\r\n     */\r\n\r\n    turndown: function (input) {\r\n      if (!canConvert(input)) {\r\n        throw new TypeError(\r\n          input + ' is not a string, or an element/document/fragment node.'\r\n        )\r\n      }\r\n\r\n      if (input === '') return ''\r\n\r\n      var output = process.call(this, new RootNode(input));\r\n      return postProcess.call(this, output)\r\n    },\r\n\r\n    /**\r\n     * Add one or more plugins\r\n     * @public\r\n     * @param {Function|Array} plugin The plugin or array of plugins to add\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    use: function (plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\r\n      } else if (typeof plugin === 'function') {\r\n        plugin(this);\r\n      } else {\r\n        throw new TypeError('plugin must be a Function or an Array of Functions')\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Adds a rule\r\n     * @public\r\n     * @param {String} key The unique key of the rule\r\n     * @param {Object} rule The rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    addRule: function (key, rule) {\r\n      this.rules.add(key, rule);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Keep a node (as HTML) that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    keep: function (filter) {\r\n      this.rules.keep(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Remove a node that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    remove: function (filter) {\r\n      this.rules.remove(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Escapes Markdown syntax\r\n     * @public\r\n     * @param {String} string The string to escape\r\n     * @returns A string with Markdown syntax escaped\r\n     * @type String\r\n     */\r\n\r\n    escape: function (string) {\r\n      return escapes.reduce(function (accumulator, escape) {\r\n        return accumulator.replace(escape[0], escape[1])\r\n      }, string)\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reduces a DOM node down to its Markdown string equivalent\r\n   * @private\r\n   * @param {HTMLElement} parentNode The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function process (parentNode) {\r\n    var self = this;\r\n    return reduce.call(parentNode.childNodes, function (output, node) {\r\n      node = new Node(node);\r\n\r\n      var replacement = '';\r\n      if (node.nodeType === 3) {\r\n        replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\r\n      } else if (node.nodeType === 1) {\r\n        replacement = replacementForNode.call(self, node);\r\n      }\r\n\r\n      return join(output, replacement)\r\n    }, '')\r\n  }\r\n\r\n  /**\r\n   * Appends strings as each rule requires and trims the output\r\n   * @private\r\n   * @param {String} output The conversion output\r\n   * @returns A trimmed version of the ouput\r\n   * @type String\r\n   */\r\n\r\n  function postProcess (output) {\r\n    var self = this;\r\n    this.rules.forEach(function (rule) {\r\n      if (typeof rule.append === 'function') {\r\n        output = join(output, rule.append(self.options));\r\n      }\r\n    });\r\n\r\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\r\n  }\r\n\r\n  /**\r\n   * Converts an element node to its Markdown equivalent\r\n   * @private\r\n   * @param {HTMLElement} node The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function replacementForNode (node) {\r\n    var rule = this.rules.forNode(node);\r\n    var content = process.call(this, node);\r\n    var whitespace = node.flankingWhitespace;\r\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\r\n    return (\r\n      whitespace.leading +\r\n      rule.replacement(content, node, this.options) +\r\n      whitespace.trailing\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Determines the new lines between the current output and the replacement\r\n   * @private\r\n   * @param {String} output The current conversion output\r\n   * @param {String} replacement The string to append to the output\r\n   * @returns The whitespace to separate the current output and the replacement\r\n   * @type String\r\n   */\r\n\r\n  function separatingNewlines (output, replacement) {\r\n    var newlines = [\r\n      output.match(trailingNewLinesRegExp)[0],\r\n      replacement.match(leadingNewLinesRegExp)[0]\r\n    ].sort();\r\n    var maxNewlines = newlines[newlines.length - 1];\r\n    return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\r\n  }\r\n\r\n  function join (string1, string2) {\r\n    var separator = separatingNewlines(string1, string2);\r\n\r\n    // Remove trailing/leading newlines and replace with separator\r\n    string1 = string1.replace(trailingNewLinesRegExp, '');\r\n    string2 = string2.replace(leadingNewLinesRegExp, '');\r\n\r\n    return string1 + separator + string2\r\n  }\r\n\r\n  /**\r\n   * Determines whether an input can be converted\r\n   * @private\r\n   * @param {String|HTMLElement} input Describe this parameter\r\n   * @returns Describe what it returns\r\n   * @type String|Object|Array|Boolean|Number\r\n   */\r\n\r\n  function canConvert (input) {\r\n    return (\r\n      input != null && (\r\n        typeof input === 'string' ||\r\n        (input.nodeType && (\r\n          input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\r\n        ))\r\n      )\r\n    )\r\n  }\r\n\r\n  return TurndownService;\r\n\r\n});\r\n\ndefine('skylark-markups-md/Turndown',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/turndown\"\r\n], function(langx,markdown, TurndownService) {\r\n\r\n   return markdown.Turndown =  TurndownService;\r\n});\ndefine('skylark-markups-md/main',[\r\n    \"./markdown\",\r\n    \"./Parser\",\r\n    \"./Turndown\"\r\n], function(markdown) {\r\n    return markdown;\r\n});\r\n\ndefine('skylark-markups-md', ['skylark-markups-md/main'], function (main) { return main; });\n\n"]}