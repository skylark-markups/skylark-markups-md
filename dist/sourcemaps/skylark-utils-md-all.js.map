{"version":3,"sources":["skylark-utils-md-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","markdown","createAssigner","keysFunc","defaults","obj","arguments","Object","index","source","keys","l","key","advise","dispatcher","type","advice","receiveArguments","signal","previous","around","advised","this","remove","target","next","nextId","aspect","methodName","existing","executionId","before","results","after","newResults","undefined","call","allKeys","isObject","createEvent","props","e","CustomEvent","safeMixin","debounce","fn","wait","timeout","later","clearTimeout","setTimeout","values","_","Array","clone","src","checkCloneMethod","copy","isArray","isPlainObject","compact","array","filter","item","dasherize","str","replace","toLowerCase","deserializeValue","value","test","JSON","parse","each","callback","undef","flatten","isArrayLike","result","j","funcArg","context","arg","idx","payload","isFunction","getQueryParams","url","location","href","segs","params","queryParam","nv","grep","out","has","path","inArray","indexOf","inherit","ctor","f","prototype","object","constructor","isString","isHtmlNode","isBoolean","isDocument","nodeType","DOCUMENT_NODE","isEqual","a","b","eq","isWindow","getPrototypeOf","isDefined","Node","isInstanceOf","Number","String","Boolean","isNumber","isSameOrigin","origin","protocol","hostname","port","startsWith","isEmptyObject","name","isMatch","attrs","makeArray","offset","startWith","concat","slice","elements","defer","requestAnimationFrame","setTimeoutout","noop","proxy","proxyFn","unshift","TypeError","toPixel","parseFloat","trim","removeItem","items","splice","_mixin","deep","safe","_parseMixinArgs","shift","sources","mixin","fallback","prop","substitute","template","transform","thisObject","getObject","match","retVal","getValue","_k","reverse","v","format","toString","uid","_uid","uniq","uniqueId","prefix","idCounter","langx","PGLISTENERS","Symbol","deepEq","SymbolProto","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","f1","extendClass","options","proto","_super","superclass","noOverrided","_constructor","superFn","tmp","overrided","ret","get","defineProperty","serialMixins","mixins","clss","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","init","klassName","__mixins__","partial","delegate","TMP","getAbsoluteUrl","document","createElement","class2type","Deferred","self","p","promise","Promise","resolve","reject","_resolve","_reject","added","state","isResolved","isRejected","then","onResolved","onRejected","onProgress","progress","__ctx__","always","handler","done","fail","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","first","race","when","valueOrPromise","receivedPromise","err","d","data","immediate","Evented","on","events","selector","ctx","one","_hub","trigger","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","Stateful","attributes","cid","cidPrefix","collection","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","SimpleQueryEngine","query","arr","cache","buildFn","execute","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","matches","QueryResults","addIterativeMethod","method","isPromise","async","parallel","rets","func","series","waterful","ArrayStore","queryEngine","idProperty","getIdentity","put","Math","random","overwrite","add","setData","identifier","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","toUpperCase","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","camelCase","n","klass","lowerFirst","charAt","returnTrue","returnFalse","serializeValue","stringify","upperFirst","URL","webkitURL","Lexer","tokens","links","marked","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","encode","unescape","fromCharCode","parseInt","substring","regex","opt","RegExp","merge","pending","highlight","lex","lang","code","escaped","message","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","_tag","lexer","top","bq","loose","cap","bull","space","exec","depth","header","align","cells","ordered","smartLists","sanitize","pre","title","charCodeAt","autolink","tag","link","reflink","nolink","strong","em","br","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","tok","peek","parseText","row","cell","setOptions","inlineLexer","extend","destination","repeat","character","isBlock","node","blockElements","nodeName","isVoid","voidElements","hasVoid","querySelector","voidSelector","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","findRule","rule","filterValue","collapseWhitespace","element","isPre","firstChild","prevText","prevVoid","substr","nextNode","nextSibling","parentNode","removeChild","canParseHTMLNatively","root","DOMParser","canParse","parseFromString","createHTMLParser","JSDOM","string","RootNode","input","doc","htmlParser","getElementById","cloneNode","_htmlParser","HTMLParser","isCode","isBlank","flankingWhitespace","textContent","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nodeValue","TurndownService","headingStyle","bulletListMarker","codeBlockStyle","fence","emDelimiter","strongDelimiter","linkStyle","linkReferenceStyle","outerHTML","process","reduce","childNodes","replacementForNode","postProcess","append","forNode","whitespace","separatingNewlines","newlines","trailingNewLinesRegExp","leadingNewLinesRegExp","maxNewlines","string1","string2","separator","canConvert","lineBreak","hLevel","underline","lastElementChild","listItem","getAttribute","children","indentedCodeBlock","fencedCodeBlock","language","horizontalRule","inlineLink","referenceLink","reference","references","emphasis","hasSiblings","isCodeBlock","delimiter","leadingSpace","trailingSpace","alt","titlePart","keep","escapes","turndown","use","plugin","addRule","accumulator","Turndown","main"],"mappings":"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","file":"../skylark-utils-md-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-md/markdown',[\r\n    \"skylark-utils/skylark\"\r\n], function(skylark) {\r\n\t\r\n\treturn skylark.markdown = skylark.markdown || {};\r\n});\ndefine('skylark-langx/langx',[\"./skylark\"], function(skylark) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n\r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);\r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get || prop.value !== undefined)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _constructor = props.constructor;\r\n            if (_constructor === Object) {\r\n                _constructor = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _constructor;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n    function debounce(fn, wait) {\r\n        var timeout,\r\n            args,\r\n            later = function() {\r\n                fn.apply(null, args);\r\n            };\r\n\r\n        return function() {\r\n            args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n\r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            if (!source.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }),\r\n           added = {\r\n                state : function() {\r\n                    if (self.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (self.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                always: function(handler) {\r\n                    //this.done(handler);\r\n                    //this.fail(handler);\r\n                    this.then(handler,handler);\r\n                    return this;\r\n                },\r\n                done : function(handler) {\r\n                    return this.then(handler);\r\n                },\r\n                fail : function(handler) { \r\n                    //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n                    return this.then(null,handler);\r\n                }, \r\n                progress : function(handler) {\r\n                    self[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        mixin(p,added);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return Promise.all(array);\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return Promise.race(array);\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n//        } else if (!nativePromise) {\r\n//            var deferred = new Deferred(valueOrPromise.cancel);\r\n//            valueOrPromise.then(deferred.resolve, deferred.reject, deferred.progress);\r\n//            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve(data);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    var Evented = createClass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n    var ArrayStore = createClass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            document = window.document,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = String.substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n\r\n\r\n    });\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        after: aspect(\"after\"),\r\n\r\n        allKeys: allKeys,\r\n\r\n        around: aspect(\"around\"),\r\n\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        before: aspect(\"before\"),\r\n\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        compact: compact,\r\n\r\n        createEvent : createEvent,\r\n\r\n        dasherize: dasherize,\r\n\r\n        debounce: debounce,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        delegate: delegate,\r\n\r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        defer: defer,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        each: each,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        flatten: flatten,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        has: has,\r\n\r\n        inArray: inArray,\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: function(v) {\r\n            return v !== undefined;\r\n        },\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isMatch: isMatch,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        keys: keys,\r\n\r\n        klass: function(props, parent,mixins, options) {\r\n            return createClass(props, parent, mixins,options);\r\n        },\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        makeArray: makeArray,\r\n\r\n        map: map,\r\n\r\n        mixin: mixin,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        removeItem: removeItem,\r\n\r\n        Restful: Restful,\r\n\r\n        result : result,\r\n        \r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        safeMixin: safeMixin,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n        Stateful: Stateful,\r\n\r\n        substitute: substitute,\r\n\r\n        toPixel: toPixel,\r\n\r\n        trim: trim,\r\n\r\n        type: type,\r\n\r\n        uid: uid,\r\n\r\n        uniq: uniq,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        },\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null,\r\n\r\n        values: values,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-md/primitives/marked',[],function() {\n  /**\n   * marked - a markdown parser\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n   * https://github.com/chjj/marked\n   */\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')\n    (/bull/g, block.bullet)\n    ();\n\n  block.list = replace(block.list)\n    (/bull/g, block.bullet)\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n    ('def', '\\\\n+(?=' + block.def.source + ')')\n    ();\n\n  block.blockquote = replace(block.blockquote)\n    ('def', block.def)\n    ();\n\n  block._tag = '(?!(?:'\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\n  block.html = replace(block.html)\n    ('comment', /<!--[\\s\\S]*?-->/)\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n    (/tag/g, block._tag)\n    ();\n\n  block.paragraph = replace(block.paragraph)\n    ('hr', block.hr)\n    ('heading', block.heading)\n    ('lheading', block.lheading)\n    ('blockquote', block.blockquote)\n    ('tag', '<' + block._tag)\n    ('def', block.def)\n    ();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/\n  });\n\n  block.gfm.paragraph = replace(block.paragraph)\n    ('(?!', '(?!'\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\n    ();\n\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n\n  Lexer.rules = block;\n\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function(src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n\n  Lexer.prototype.lex = function(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ')\n      .replace(/\\u00a0/g, ' ')\n      .replace(/\\u2424/g, '\\n');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n\n  Lexer.prototype.token = function(src, top, bq) {\n    var src = src.replace(/^ +$/gm, '')\n      , next\n      , loose\n      , cap\n      , bull\n      , b\n      , item\n      , space\n      , i\n      , l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic\n            ? cap.replace(/\\n+$/, '')\n            : cap\n        });\n        continue;\n      }\n\n      // fences (gfm)\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3]\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top, true);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        });\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose\n              ? 'loose_item_start'\n              : 'list_item_start'\n          });\n\n          // Recurse.\n          this.token(item, false, bq);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      }\n\n      // table (gfm)\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i]\n            .replace(/^ *\\| *| *\\| *$/g, '')\n            .split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\n  inline.link = replace(inline.link)\n    ('inside', inline._inside)\n    ('href', inline._href)\n    ();\n\n  inline.reflink = replace(inline.reflink)\n    ('inside', inline._inside)\n    ();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)\n      (']|', '~]|')\n      ('|', '|https?://|')\n      ()\n  });\n\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new\n        Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n\n  InlineLexer.rules = inline;\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function(src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n\n  /**\n   * Lexing/Compiling\n   */\n\n  InlineLexer.prototype.output = function(src) {\n    var out = ''\n      , link\n      , text\n      , href\n      , cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':'\n            ? this.mangle(cap[1].substring(7))\n            : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize\n          ? escape(cap[0])\n          : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2], true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(this.smartypants(cap[0]));\n        continue;\n      }\n\n      if (src) {\n        throw new\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n\n  /**\n   * Compile Link\n   */\n\n  InlineLexer.prototype.outputLink = function(cap, link) {\n    var href = escape(link.href)\n      , title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  };\n\n  /**\n   * Smartypants Transformations\n   */\n\n  InlineLexer.prototype.smartypants = function(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/--/g, '\\u2014')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  };\n\n  /**\n   * Mangle Links\n   */\n\n  InlineLexer.prototype.mangle = function(text) {\n    var out = ''\n      , l = text.length\n      , i = 0\n      , ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n\n  /**\n   * Renderer\n   */\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function(code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function(html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function(text, level, raw) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  };\n\n  Renderer.prototype.hr = function() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function(body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function(header, body) {\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + '<tbody>\\n'\n      + body\n      + '</tbody>\\n'\n      + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function(content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  Renderer.prototype.strong = function(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function(href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href))\n          .replace(/[^\\w:]/g, '')\n          .toLowerCase();\n      } catch (e) {\n        return '';\n      }\n      if (prot.indexOf('javascript:') === 0) {\n        return '';\n      }\n    }\n    var out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function(href, title, text) {\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  /**\n   * Parsing & Compiling\n   */\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer;\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n\n  /**\n   * Static Parse Method\n   */\n\n  Parser.parse = function(src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n\n  /**\n   * Parse Loop\n   */\n\n  Parser.prototype.parse = function(src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n\n    var out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n\n  Parser.prototype.next = function() {\n    return this.token = this.tokens.pop();\n  };\n\n  /**\n   * Preview Next Token\n   */\n\n  Parser.prototype.peek = function() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n\n  Parser.prototype.parseText = function() {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n\n  Parser.prototype.tok = function() {\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          this.token.text);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        var header = ''\n          , body = ''\n          , i\n          , row\n          , cell\n          , flags\n          , j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          flags = { header: true, align: this.token.align[i] };\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        var body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        var body = ''\n          , ordered = this.token.ordered;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered);\n      }\n      case 'list_item_start': {\n        var body = '';\n\n        while (this.next().type !== 'list_item_end') {\n          body += this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n\n        return this.renderer.listitem(body);\n      }\n      case 'loose_item_start': {\n        var body = '';\n\n        while (this.next().type !== 'list_item_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.listitem(body);\n      }\n      case 'html': {\n        var html = !this.token.pre && !this.options.pedantic\n          ? this.inline.output(this.token.text)\n          : this.token.text;\n        return this.renderer.html(html);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function escape(html, encode) {\n    return html\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x'\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\n          : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1\n      , target\n      , key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n\n      var highlight = opt.highlight\n        , tokens\n        , pending\n        , i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt)\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? callback(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function(token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n          return highlight(token.text, token.lang, function(err, code) {\n            if (err) return done(err);\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>'\n          + escape(e.message + '', true)\n          + '</pre>';\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options =\n  marked.setOptions = function(opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer,\n    xhtml: false\n  };\n\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n\n  marked.Renderer = Renderer;\n\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n\n  marked.parse = marked;\n\n  return marked;\n});\ndefine('skylark-utils-md/Parser',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/marked\"\r\n], function(langx,markdown, marked) {\r\n\tvar Parser = markdown.Parser;\r\n\r\n   langx.mixin(Parser,markdown);\r\n\r\n   return Parser ;\r\n});\ndefine('skylark-utils-md/primitives/turndown',[],function () { \n  'use strict';\n\n  // original version : 5.0.1\n  function extend (destination) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\n      }\n    }\n    return destination\n  }\n\n  function repeat (character, count) {\n    return Array(count + 1).join(character)\n  }\n\n  var blockElements = [\n    'address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas',\n    'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\n    'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n    'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\n    'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\n    'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\n  ];\n\n  function isBlock (node) {\n    return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1\n  }\n\n  var voidElements = [\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\n  ];\n\n  function isVoid (node) {\n    return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1\n  }\n\n  var voidSelector = voidElements.join();\n  function hasVoid (node) {\n    return node.querySelector && node.querySelector(voidSelector)\n  }\n\n  var rules = {};\n\n  rules.paragraph = {\n    filter: 'p',\n\n    replacement: function (content) {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  };\n\n  rules.lineBreak = {\n    filter: 'br',\n\n    replacement: function (content, node, options) {\n      return options.br + '\\n'\n    }\n  };\n\n  rules.heading = {\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    replacement: function (content, node, options) {\n      var hLevel = Number(node.nodeName.charAt(1));\n\n      if (options.headingStyle === 'setext' && hLevel < 3) {\n        var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n        return (\n          '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n        )\n      } else {\n        return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n      }\n    }\n  };\n\n  rules.blockquote = {\n    filter: 'blockquote',\n\n    replacement: function (content) {\n      content = content.replace(/^\\n+|\\n+$/g, '');\n      content = content.replace(/^/gm, '> ');\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  };\n\n  rules.list = {\n    filter: ['ul', 'ol'],\n\n    replacement: function (content, node) {\n      var parent = node.parentNode;\n      if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n        return '\\n' + content\n      } else {\n        return '\\n\\n' + content + '\\n\\n'\n      }\n    }\n  };\n\n  rules.listItem = {\n    filter: 'li',\n\n    replacement: function (content, node, options) {\n      content = content\n        .replace(/^\\n+/, '') // remove leading newlines\n        .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n        .replace(/\\n/gm, '\\n    '); // indent\n      var prefix = options.bulletListMarker + '   ';\n      var parent = node.parentNode;\n      if (parent.nodeName === 'OL') {\n        var start = parent.getAttribute('start');\n        var index = Array.prototype.indexOf.call(parent.children, node);\n        prefix = (start ? Number(start) + index : index + 1) + '.  ';\n      }\n      return (\n        prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n      )\n    }\n  };\n\n  rules.indentedCodeBlock = {\n    filter: function (node, options) {\n      return (\n        options.codeBlockStyle === 'indented' &&\n        node.nodeName === 'PRE' &&\n        node.firstChild &&\n        node.firstChild.nodeName === 'CODE'\n      )\n    },\n\n    replacement: function (content, node, options) {\n      return (\n        '\\n\\n    ' +\n        node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n        '\\n\\n'\n      )\n    }\n  };\n\n  rules.fencedCodeBlock = {\n    filter: function (node, options) {\n      return (\n        options.codeBlockStyle === 'fenced' &&\n        node.nodeName === 'PRE' &&\n        node.firstChild &&\n        node.firstChild.nodeName === 'CODE'\n      )\n    },\n\n    replacement: function (content, node, options) {\n      var className = node.firstChild.className || '';\n      var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n\n      return (\n        '\\n\\n' + options.fence + language + '\\n' +\n        node.firstChild.textContent +\n        '\\n' + options.fence + '\\n\\n'\n      )\n    }\n  };\n\n  rules.horizontalRule = {\n    filter: 'hr',\n\n    replacement: function (content, node, options) {\n      return '\\n\\n' + options.hr + '\\n\\n'\n    }\n  };\n\n  rules.inlineLink = {\n    filter: function (node, options) {\n      return (\n        options.linkStyle === 'inlined' &&\n        node.nodeName === 'A' &&\n        node.getAttribute('href')\n      )\n    },\n\n    replacement: function (content, node) {\n      var href = node.getAttribute('href');\n      var title = node.title ? ' \"' + node.title + '\"' : '';\n      return '[' + content + '](' + href + title + ')'\n    }\n  };\n\n  rules.referenceLink = {\n    filter: function (node, options) {\n      return (\n        options.linkStyle === 'referenced' &&\n        node.nodeName === 'A' &&\n        node.getAttribute('href')\n      )\n    },\n\n    replacement: function (content, node, options) {\n      var href = node.getAttribute('href');\n      var title = node.title ? ' \"' + node.title + '\"' : '';\n      var replacement;\n      var reference;\n\n      switch (options.linkReferenceStyle) {\n        case 'collapsed':\n          replacement = '[' + content + '][]';\n          reference = '[' + content + ']: ' + href + title;\n          break\n        case 'shortcut':\n          replacement = '[' + content + ']';\n          reference = '[' + content + ']: ' + href + title;\n          break\n        default:\n          var id = this.references.length + 1;\n          replacement = '[' + content + '][' + id + ']';\n          reference = '[' + id + ']: ' + href + title;\n      }\n\n      this.references.push(reference);\n      return replacement\n    },\n\n    references: [],\n\n    append: function (options) {\n      var references = '';\n      if (this.references.length) {\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n        this.references = []; // Reset references\n      }\n      return references\n    }\n  };\n\n  rules.emphasis = {\n    filter: ['em', 'i'],\n\n    replacement: function (content, node, options) {\n      if (!content.trim()) return ''\n      return options.emDelimiter + content + options.emDelimiter\n    }\n  };\n\n  rules.strong = {\n    filter: ['strong', 'b'],\n\n    replacement: function (content, node, options) {\n      if (!content.trim()) return ''\n      return options.strongDelimiter + content + options.strongDelimiter\n    }\n  };\n\n  rules.code = {\n    filter: function (node) {\n      var hasSiblings = node.previousSibling || node.nextSibling;\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n      return node.nodeName === 'CODE' && !isCodeBlock\n    },\n\n    replacement: function (content) {\n      if (!content.trim()) return ''\n\n      var delimiter = '`';\n      var leadingSpace = '';\n      var trailingSpace = '';\n      var matches = content.match(/`+/gm);\n      if (matches) {\n        if (/^`/.test(content)) leadingSpace = ' ';\n        if (/`$/.test(content)) trailingSpace = ' ';\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n      }\n\n      return delimiter + leadingSpace + content + trailingSpace + delimiter\n    }\n  };\n\n  rules.image = {\n    filter: 'img',\n\n    replacement: function (content, node) {\n      var alt = node.alt || '';\n      var src = node.getAttribute('src') || '';\n      var title = node.title || '';\n      var titlePart = title ? ' \"' + title + '\"' : '';\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n    }\n  };\n\n  /**\n   * Manages a collection of rules used to convert HTML to Markdown\n   */\n\n  function Rules (options) {\n    this.options = options;\n    this._keep = [];\n    this._remove = [];\n\n    this.blankRule = {\n      replacement: options.blankReplacement\n    };\n\n    this.keepReplacement = options.keepReplacement;\n\n    this.defaultRule = {\n      replacement: options.defaultReplacement\n    };\n\n    this.array = [];\n    for (var key in options.rules) this.array.push(options.rules[key]);\n  }\n\n  Rules.prototype = {\n    add: function (key, rule) {\n      this.array.unshift(rule);\n    },\n\n    keep: function (filter) {\n      this._keep.unshift({\n        filter: filter,\n        replacement: this.keepReplacement\n      });\n    },\n\n    remove: function (filter) {\n      this._remove.unshift({\n        filter: filter,\n        replacement: function () {\n          return ''\n        }\n      });\n    },\n\n    forNode: function (node) {\n      if (node.isBlank) return this.blankRule\n      var rule;\n\n      if ((rule = findRule(this.array, node, this.options))) return rule\n      if ((rule = findRule(this._keep, node, this.options))) return rule\n      if ((rule = findRule(this._remove, node, this.options))) return rule\n\n      return this.defaultRule\n    },\n\n    forEach: function (fn) {\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n    }\n  };\n\n  function findRule (rules, node, options) {\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      if (filterValue(rule, node, options)) return rule\n    }\n    return void 0\n  }\n\n  function filterValue (rule, node, options) {\n    var filter = rule.filter;\n    if (typeof filter === 'string') {\n      if (filter === node.nodeName.toLowerCase()) return true\n    } else if (Array.isArray(filter)) {\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n    } else if (typeof filter === 'function') {\n      if (filter.call(rule, node, options)) return true\n    } else {\n      throw new TypeError('`filter` needs to be a string, array, or function')\n    }\n  }\n\n  /**\n   * The collapseWhitespace function is adapted from collapse-whitespace\n   * by Luc Thevenard.\n   *\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n   * THE SOFTWARE.\n   */\n\n  /**\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n   *\n   * @param {Object} options\n   */\n  function collapseWhitespace (options) {\n    var element = options.element;\n    var isBlock = options.isBlock;\n    var isVoid = options.isVoid;\n    var isPre = options.isPre || function (node) {\n      return node.nodeName === 'PRE'\n    };\n\n    if (!element.firstChild || isPre(element)) return\n\n    var prevText = null;\n    var prevVoid = false;\n\n    var prev = null;\n    var node = next(prev, element, isPre);\n\n    while (node !== element) {\n      if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n        if ((!prevText || / $/.test(prevText.data)) &&\n            !prevVoid && text[0] === ' ') {\n          text = text.substr(1);\n        }\n\n        // `text` might be empty at this point.\n        if (!text) {\n          node = remove(node);\n          continue\n        }\n\n        node.data = text;\n\n        prevText = node;\n      } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n        if (isBlock(node) || node.nodeName === 'BR') {\n          if (prevText) {\n            prevText.data = prevText.data.replace(/ $/, '');\n          }\n\n          prevText = null;\n          prevVoid = false;\n        } else if (isVoid(node)) {\n          // Avoid trimming space around non-block, non-BR void elements.\n          prevText = null;\n          prevVoid = true;\n        }\n      } else {\n        node = remove(node);\n        continue\n      }\n\n      var nextNode = next(prev, node, isPre);\n      prev = node;\n      node = nextNode;\n    }\n\n    if (prevText) {\n      prevText.data = prevText.data.replace(/ $/, '');\n      if (!prevText.data) {\n        remove(prevText);\n      }\n    }\n  }\n\n  /**\n   * remove(node) removes the given node from the DOM and returns the\n   * next node in the sequence.\n   *\n   * @param {Node} node\n   * @return {Node} node\n   */\n  function remove (node) {\n    var next = node.nextSibling || node.parentNode;\n\n    node.parentNode.removeChild(node);\n\n    return next\n  }\n\n  /**\n   * next(prev, current, isPre) returns the next node in the sequence, given the\n   * current and previous nodes.\n   *\n   * @param {Node} prev\n   * @param {Node} current\n   * @param {Function} isPre\n   * @return {Node}\n   */\n  function next (prev, current, isPre) {\n    if ((prev && prev.parentNode === current) || isPre(current)) {\n      return current.nextSibling || current.parentNode\n    }\n\n    return current.firstChild || current.nextSibling || current.parentNode\n  }\n\n  /*\n   * Set up window for Node.js\n   */\n\n  var root = (typeof window !== 'undefined' ? window : {});\n\n  /*\n   * Parsing HTML strings\n   */\n\n  function canParseHTMLNatively () {\n    var Parser = root.DOMParser;\n    var canParse = false;\n\n    // Adapted from https://gist.github.com/1129031\n    // Firefox/Opera/IE throw errors on unsupported types\n    try {\n      // WebKit returns null on unsupported types\n      if (new Parser().parseFromString('', 'text/html')) {\n        canParse = true;\n      }\n    } catch (e) {}\n\n    return canParse\n  }\n\n  function createHTMLParser () {\n    var Parser = function () {};\n\n    {\n      var JSDOM = require('jsdom').JSDOM;\n      Parser.prototype.parseFromString = function (string) {\n        return new JSDOM(string).window.document\n      };\n    }\n    return Parser\n  }\n\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\n  function RootNode (input) {\n    var root;\n    if (typeof input === 'string') {\n      var doc = htmlParser().parseFromString(\n        // DOM parsers arrange elements in the <head> and <body>.\n        // Wrapping in a custom element ensures elements are reliably arranged in\n        // a single element.\n        '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n        'text/html'\n      );\n      root = doc.getElementById('turndown-root');\n    } else {\n      root = input.cloneNode(true);\n    }\n    collapseWhitespace({\n      element: root,\n      isBlock: isBlock,\n      isVoid: isVoid\n    });\n\n    return root\n  }\n\n  var _htmlParser;\n  function htmlParser () {\n    _htmlParser = _htmlParser || new HTMLParser();\n    return _htmlParser\n  }\n\n  function Node (node) {\n    node.isBlock = isBlock(node);\n    node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\n    node.isBlank = isBlank(node);\n    node.flankingWhitespace = flankingWhitespace(node);\n    return node\n  }\n\n  function isBlank (node) {\n    return (\n      ['A', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'].indexOf(node.nodeName) === -1 &&\n      /^\\s*$/i.test(node.textContent) &&\n      !isVoid(node) &&\n      !hasVoid(node)\n    )\n  }\n\n  function flankingWhitespace (node) {\n    var leading = '';\n    var trailing = '';\n\n    if (!node.isBlock) {\n      var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent);\n      var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent);\n\n      if (hasLeading && !isFlankedByWhitespace('left', node)) {\n        leading = ' ';\n      }\n      if (hasTrailing && !isFlankedByWhitespace('right', node)) {\n        trailing = ' ';\n      }\n    }\n\n    return { leading: leading, trailing: trailing }\n  }\n\n  function isFlankedByWhitespace (side, node) {\n    var sibling;\n    var regExp;\n    var isFlanked;\n\n    if (side === 'left') {\n      sibling = node.previousSibling;\n      regExp = / $/;\n    } else {\n      sibling = node.nextSibling;\n      regExp = /^ /;\n    }\n\n    if (sibling) {\n      if (sibling.nodeType === 3) {\n        isFlanked = regExp.test(sibling.nodeValue);\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n        isFlanked = regExp.test(sibling.textContent);\n      }\n    }\n    return isFlanked\n  }\n\n  var reduce = Array.prototype.reduce;\n  var leadingNewLinesRegExp = /^\\n*/;\n  var trailingNewLinesRegExp = /\\n*$/;\n  var escapes = [\n    [/\\\\/g, '\\\\\\\\'],\n    [/\\*/g, '\\\\*'],\n    [/^-/g, '\\\\-'],\n    [/^\\+ /g, '\\\\+ '],\n    [/^(=+)/g, '\\\\$1'],\n    [/^(#{1,6}) /g, '\\\\$1 '],\n    [/`/g, '\\\\`'],\n    [/^~~~/g, '\\\\~~~'],\n    [/\\[/g, '\\\\['],\n    [/\\]/g, '\\\\]'],\n    [/^>/g, '\\\\>'],\n    [/_/g, '\\\\_'],\n    [/^(\\d+)\\. /g, '$1\\\\. ']\n  ];\n\n  function TurndownService (options) {\n    if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n    var defaults = {\n      rules: rules,\n      headingStyle: 'setext',\n      hr: '* * *',\n      bulletListMarker: '*',\n      codeBlockStyle: 'indented',\n      fence: '```',\n      emDelimiter: '_',\n      strongDelimiter: '**',\n      linkStyle: 'inlined',\n      linkReferenceStyle: 'full',\n      br: '  ',\n      blankReplacement: function (content, node) {\n        return node.isBlock ? '\\n\\n' : ''\n      },\n      keepReplacement: function (content, node) {\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n      },\n      defaultReplacement: function (content, node) {\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n      }\n    };\n    this.options = extend({}, defaults, options);\n    this.rules = new Rules(this.options);\n  }\n\n  TurndownService.prototype = {\n    /**\n     * The entry point for converting a string or DOM node to Markdown\n     * @public\n     * @param {String|HTMLElement} input The string or DOM node to convert\n     * @returns A Markdown representation of the input\n     * @type String\n     */\n\n    turndown: function (input) {\n      if (!canConvert(input)) {\n        throw new TypeError(\n          input + ' is not a string, or an element/document/fragment node.'\n        )\n      }\n\n      if (input === '') return ''\n\n      var output = process.call(this, new RootNode(input));\n      return postProcess.call(this, output)\n    },\n\n    /**\n     * Add one or more plugins\n     * @public\n     * @param {Function|Array} plugin The plugin or array of plugins to add\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    use: function (plugin) {\n      if (Array.isArray(plugin)) {\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n      } else if (typeof plugin === 'function') {\n        plugin(this);\n      } else {\n        throw new TypeError('plugin must be a Function or an Array of Functions')\n      }\n      return this\n    },\n\n    /**\n     * Adds a rule\n     * @public\n     * @param {String} key The unique key of the rule\n     * @param {Object} rule The rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    addRule: function (key, rule) {\n      this.rules.add(key, rule);\n      return this\n    },\n\n    /**\n     * Keep a node (as HTML) that matches the filter\n     * @public\n     * @param {String|Array|Function} filter The unique key of the rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    keep: function (filter) {\n      this.rules.keep(filter);\n      return this\n    },\n\n    /**\n     * Remove a node that matches the filter\n     * @public\n     * @param {String|Array|Function} filter The unique key of the rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    remove: function (filter) {\n      this.rules.remove(filter);\n      return this\n    },\n\n    /**\n     * Escapes Markdown syntax\n     * @public\n     * @param {String} string The string to escape\n     * @returns A string with Markdown syntax escaped\n     * @type String\n     */\n\n    escape: function (string) {\n      return escapes.reduce(function (accumulator, escape) {\n        return accumulator.replace(escape[0], escape[1])\n      }, string)\n    }\n  };\n\n  /**\n   * Reduces a DOM node down to its Markdown string equivalent\n   * @private\n   * @param {HTMLElement} parentNode The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  function process (parentNode) {\n    var self = this;\n    return reduce.call(parentNode.childNodes, function (output, node) {\n      node = new Node(node);\n\n      var replacement = '';\n      if (node.nodeType === 3) {\n        replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n      } else if (node.nodeType === 1) {\n        replacement = replacementForNode.call(self, node);\n      }\n\n      return join(output, replacement)\n    }, '')\n  }\n\n  /**\n   * Appends strings as each rule requires and trims the output\n   * @private\n   * @param {String} output The conversion output\n   * @returns A trimmed version of the ouput\n   * @type String\n   */\n\n  function postProcess (output) {\n    var self = this;\n    this.rules.forEach(function (rule) {\n      if (typeof rule.append === 'function') {\n        output = join(output, rule.append(self.options));\n      }\n    });\n\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n  }\n\n  /**\n   * Converts an element node to its Markdown equivalent\n   * @private\n   * @param {HTMLElement} node The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  function replacementForNode (node) {\n    var rule = this.rules.forNode(node);\n    var content = process.call(this, node);\n    var whitespace = node.flankingWhitespace;\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\n    return (\n      whitespace.leading +\n      rule.replacement(content, node, this.options) +\n      whitespace.trailing\n    )\n  }\n\n  /**\n   * Determines the new lines between the current output and the replacement\n   * @private\n   * @param {String} output The current conversion output\n   * @param {String} replacement The string to append to the output\n   * @returns The whitespace to separate the current output and the replacement\n   * @type String\n   */\n\n  function separatingNewlines (output, replacement) {\n    var newlines = [\n      output.match(trailingNewLinesRegExp)[0],\n      replacement.match(leadingNewLinesRegExp)[0]\n    ].sort();\n    var maxNewlines = newlines[newlines.length - 1];\n    return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\n  }\n\n  function join (string1, string2) {\n    var separator = separatingNewlines(string1, string2);\n\n    // Remove trailing/leading newlines and replace with separator\n    string1 = string1.replace(trailingNewLinesRegExp, '');\n    string2 = string2.replace(leadingNewLinesRegExp, '');\n\n    return string1 + separator + string2\n  }\n\n  /**\n   * Determines whether an input can be converted\n   * @private\n   * @param {String|HTMLElement} input Describe this parameter\n   * @returns Describe what it returns\n   * @type String|Object|Array|Boolean|Number\n   */\n\n  function canConvert (input) {\n    return (\n      input != null && (\n        typeof input === 'string' ||\n        (input.nodeType && (\n          input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n        ))\n      )\n    )\n  }\n\n  return TurndownService;\n\n});\n\ndefine('skylark-utils-md/Turndown',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/turndown\"\r\n], function(langx,markdown, TurndownService) {\r\n\r\n   return markdown.Turndown =  TurndownService;\r\n});\ndefine('skylark-utils-md/main',[\r\n    \"./markdown\",\r\n    \"./Parser\",\r\n    \"./Turndown\"\r\n], function(markdown) {\r\n    return markdown;\r\n});\r\n\ndefine('skylark-utils-md', ['skylark-utils-md/main'], function (main) { return main; });\n\n"]}