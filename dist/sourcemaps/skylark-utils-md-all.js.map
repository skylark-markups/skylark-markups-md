{"version":3,"sources":["skylark-utils-md-all.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","markdown","isArray","object","constructor","Array","isArrayLike","obj","isString","isHtmlNode","isFunction","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","name","value","type","Node","isNumber","isObject","isPlainObject","isWindow","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","class2type","toLowerCase","String","toString","call","types","createAssigner","keysFunc","defaults","arguments","index","source","keys","l","key","allKeys","each","callback","undef","this","extend","target","deep","slice","shift","arg","mixin","has","path","isEqual","a","b","eq","isMatch","attrs","_mixin","safe","undefined","_parseMixinArgs","params","sources","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","clone","src","checkCloneMethod","copy","deepEq","SymbolProto","Symbol","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","objects","compact","array","filter","flatten","j","inArray","makeArray","offset","startWith","concat","elements","uniq","first","n","arrays","f1","extendClass","ctor","props","options","proto","_super","superclass","noOverrided","_constructor","fn","superFn","tmp","overrided","ret","defineProperty","serialMixins","mixins","clss","unshift","cls","clsMixines","mergeMixins","newCtor","xtor","Function","create","__proto__","__mixin__","createClass","parent","innerParent","_construct","init","klassName","__mixins__","partial","inherit","klass","SimpleQueryEngine","query","arr","thisObject","out","cache","buildFn","execute","results","sortSet","sort","aValue","attribute","bValue","descending","start","count","total","Infinity","queryObject","required","test","matches","QueryResults","addIterativeMethod","method","Deferred","when","isPromise","then","delegate","ArrayStore","queryEngine","idProperty","get","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","advise","dispatcher","advice","receiveArguments","signal","previous","around","advised","next","nextId","aspect","methodName","existing","executionId","before","after","newResults","defer","requestAnimationFrame","setTimeoutout","noop","proxy","context","proxyFn","TypeError","debounce","wait","timeout","later","clearTimeout","setTimeout","TMP","returnTrue","returnFalse","funcs","wrapPromise","p","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","Promise","__ctx__","handler","PGLISTENERS","pipe","always","done","fail","self","promise","resolve","reject","_resolve","_reject","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","dasherize","str","replace","deserializeValue","JSON","parse","trim","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","camelCase","toUpperCase","lowerFirst","charAt","serializeValue","stringify","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","serializeData","processData","param","traditional","serialize","scope","t","hash","jsonpID","rscript","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","xhrFields","withCredentials","escape","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","_uid","prefix","idCounter","langx","URL","webkitURL","Lexer","tokens","links","marked","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","encode","unescape","fromCharCode","parseInt","substring","regex","opt","RegExp","merge","pending","highlight","lex","lang","code","escaped","message","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","_tag","lexer","top","bq","loose","cap","bull","space","exec","depth","header","align","cells","ordered","smartLists","sanitize","pre","title","charCodeAt","autolink","tag","link","reflink","nolink","strong","em","br","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","tok","peek","parseText","row","cell","setOptions","inlineLexer","destination","repeat","character","isBlock","node","blockElements","nodeName","isVoid","voidElements","hasVoid","querySelector","voidSelector","Rules","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","findRule","rule","filterValue","collapseWhitespace","element","isPre","firstChild","prevText","prevVoid","substr","nextNode","nextSibling","parentNode","removeChild","canParseHTMLNatively","root","DOMParser","canParse","parseFromString","createHTMLParser","JSDOM","string","RootNode","input","doc","htmlParser","getElementById","cloneNode","_htmlParser","HTMLParser","isCode","isBlank","flankingWhitespace","textContent","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nodeValue","TurndownService","headingStyle","bulletListMarker","codeBlockStyle","fence","emDelimiter","strongDelimiter","linkStyle","linkReferenceStyle","outerHTML","process","reduce","childNodes","replacementForNode","postProcess","append","forNode","whitespace","separatingNewlines","newlines","trailingNewLinesRegExp","leadingNewLinesRegExp","maxNewlines","string1","string2","separator","canConvert","lineBreak","hLevel","Number","underline","lastElementChild","listItem","getAttribute","children","indentedCodeBlock","fencedCodeBlock","language","horizontalRule","inlineLink","referenceLink","reference","references","emphasis","hasSiblings","isCodeBlock","delimiter","leadingSpace","trailingSpace","alt","titlePart","keep","escapes","turndown","use","plugin","addRule","accumulator","Turndown","main"],"mappings":"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","file":"../skylark-utils-md-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-md/markdown',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\t\r\n\treturn skylark.markdown = skylark.markdown || {};\r\n});\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n    \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: objects.each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided;\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n\r\n            var _construct = props._construct;\r\n            if (!_construct) {\r\n                _construct = function() {\r\n                    if (this.init) {\r\n                        return this.init.apply(this, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            ctor._constructor = _construct;\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        init : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-md/primitives/marked',[],function() {\r\n  /**\r\n   * marked - a markdown parser\r\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\r\n   * https://github.com/chjj/marked\r\n   */\r\n\r\n  /**\r\n   * Block-Level Grammar\r\n   */\r\n\r\n  var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: noop,\r\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\r\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n    table: noop,\r\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n    text: /^[^\\n]+/\r\n  };\r\n\r\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n  block.item = replace(block.item, 'gm')\r\n    (/bull/g, block.bullet)\r\n    ();\r\n\r\n  block.list = replace(block.list)\r\n    (/bull/g, block.bullet)\r\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\r\n    ('def', '\\\\n+(?=' + block.def.source + ')')\r\n    ();\r\n\r\n  block.blockquote = replace(block.blockquote)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  block._tag = '(?!(?:'\r\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n  block.html = replace(block.html)\r\n    ('comment', /<!--[\\s\\S]*?-->/)\r\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n    (/tag/g, block._tag)\r\n    ();\r\n\r\n  block.paragraph = replace(block.paragraph)\r\n    ('hr', block.hr)\r\n    ('heading', block.heading)\r\n    ('lheading', block.lheading)\r\n    ('blockquote', block.blockquote)\r\n    ('tag', '<' + block._tag)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  /**\r\n   * Normal Block Grammar\r\n   */\r\n\r\n  block.normal = merge({}, block);\r\n\r\n  /**\r\n   * GFM Block Grammar\r\n   */\r\n\r\n  block.gfm = merge({}, block.normal, {\r\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n    paragraph: /^/\r\n  });\r\n\r\n  block.gfm.paragraph = replace(block.paragraph)\r\n    ('(?!', '(?!'\r\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n    ();\r\n\r\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\r\n\r\n  block.tables = merge({}, block.gfm, {\r\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n  });\r\n\r\n  /**\r\n   * Block Lexer\r\n   */\r\n\r\n  function Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = {};\r\n    this.options = options || marked.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.tables) {\r\n        this.rules = block.tables;\r\n      } else {\r\n        this.rules = block.gfm;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Block Rules\r\n   */\r\n\r\n  Lexer.rules = block;\r\n\r\n  /**\r\n   * Static Lex Method\r\n   */\r\n\r\n  Lexer.lex = function(src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n  };\r\n\r\n  /**\r\n   * Preprocessing\r\n   */\r\n\r\n  Lexer.prototype.lex = function(src) {\r\n    src = src\r\n      .replace(/\\r\\n|\\r/g, '\\n')\r\n      .replace(/\\t/g, '    ')\r\n      .replace(/\\u00a0/g, ' ')\r\n      .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n  };\r\n\r\n  /**\r\n   * Lexing\r\n   */\r\n\r\n  Lexer.prototype.token = function(src, top, bq) {\r\n    var src = src.replace(/^ +$/gm, '')\r\n      , next\r\n      , loose\r\n      , cap\r\n      , bull\r\n      , b\r\n      , item\r\n      , space\r\n      , i\r\n      , l;\r\n\r\n    while (src) {\r\n      // newline\r\n      if (cap = this.rules.newline.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[0].length > 1) {\r\n          this.tokens.push({\r\n            type: 'space'\r\n          });\r\n        }\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        cap = cap[0].replace(/^ {4}/gm, '');\r\n        this.tokens.push({\r\n          type: 'code',\r\n          text: !this.options.pedantic\r\n            ? cap.replace(/\\n+$/, '')\r\n            : cap\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // fences (gfm)\r\n      if (cap = this.rules.fences.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'code',\r\n          lang: cap[2],\r\n          text: cap[3]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // heading\r\n      if (cap = this.rules.heading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[1].length,\r\n          text: cap[2]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // table no leading pipe (gfm)\r\n      if (top && (cap = this.rules.nptable.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i].split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // lheading\r\n      if (cap = this.rules.lheading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[2] === '=' ? 1 : 2,\r\n          text: cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // hr\r\n      if (cap = this.rules.hr.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'hr'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // blockquote\r\n      if (cap = this.rules.blockquote.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_start'\r\n        });\r\n\r\n        cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n        // Pass `top` to keep the current\r\n        // \"toplevel\" state. This is exactly\r\n        // how markdown.pl works.\r\n        this.token(cap, top, true);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // list\r\n      if (cap = this.rules.list.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        bull = cap[2];\r\n\r\n        this.tokens.push({\r\n          type: 'list_start',\r\n          ordered: bull.length > 1\r\n        });\r\n\r\n        // Get each top-level item.\r\n        cap = cap[0].match(this.rules.item);\r\n\r\n        next = false;\r\n        l = cap.length;\r\n        i = 0;\r\n\r\n        for (; i < l; i++) {\r\n          item = cap[i];\r\n\r\n          // Remove the list item's bullet\r\n          // so it is seen as the next token.\r\n          space = item.length;\r\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n          // Outdent whatever the\r\n          // list item contains. Hacky.\r\n          if (~item.indexOf('\\n ')) {\r\n            space -= item.length;\r\n            item = !this.options.pedantic\r\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n              : item.replace(/^ {1,4}/gm, '');\r\n          }\r\n\r\n          // Determine whether the next list item belongs here.\r\n          // Backpedal if it does not belong in this list.\r\n          if (this.options.smartLists && i !== l - 1) {\r\n            b = block.bullet.exec(cap[i + 1])[0];\r\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n              src = cap.slice(i + 1).join('\\n') + src;\r\n              i = l - 1;\r\n            }\r\n          }\r\n\r\n          // Determine whether item is loose or not.\r\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n          // for discount behavior.\r\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n          if (i !== l - 1) {\r\n            next = item.charAt(item.length - 1) === '\\n';\r\n            if (!loose) loose = next;\r\n          }\r\n\r\n          this.tokens.push({\r\n            type: loose\r\n              ? 'loose_item_start'\r\n              : 'list_item_start'\r\n          });\r\n\r\n          // Recurse.\r\n          this.token(item, false, bq);\r\n\r\n          this.tokens.push({\r\n            type: 'list_item_end'\r\n          });\r\n        }\r\n\r\n        this.tokens.push({\r\n          type: 'list_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // html\r\n      if (cap = this.rules.html.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: this.options.sanitize\r\n            ? 'paragraph'\r\n            : 'html',\r\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // def\r\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.links[cap[1].toLowerCase()] = {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        };\r\n        continue;\r\n      }\r\n\r\n      // table (gfm)\r\n      if (top && (cap = this.rules.table.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i]\r\n            .replace(/^ *\\| *| *\\| *$/g, '')\r\n            .split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // top-level paragraph\r\n      if (top && (cap = this.rules.paragraph.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'paragraph',\r\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n            ? cap[1].slice(0, -1)\r\n            : cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        // Top-level should never reach here.\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'text',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return this.tokens;\r\n  };\r\n\r\n  /**\r\n   * Inline-Level Grammar\r\n   */\r\n\r\n  var inline = {\r\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n    url: noop,\r\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n    link: /^!?\\[(inside)\\]\\(href\\)/,\r\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n    br: /^ {2,}\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n  };\r\n\r\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n  inline.link = replace(inline.link)\r\n    ('inside', inline._inside)\r\n    ('href', inline._href)\r\n    ();\r\n\r\n  inline.reflink = replace(inline.reflink)\r\n    ('inside', inline._inside)\r\n    ();\r\n\r\n  /**\r\n   * Normal Inline Grammar\r\n   */\r\n\r\n  inline.normal = merge({}, inline);\r\n\r\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\r\n\r\n  inline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n  });\r\n\r\n  /**\r\n   * GFM Inline Grammar\r\n   */\r\n\r\n  inline.gfm = merge({}, inline.normal, {\r\n    escape: replace(inline.escape)('])', '~|])')(),\r\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n    text: replace(inline.text)\r\n      (']|', '~]|')\r\n      ('|', '|https?://|')\r\n      ()\r\n  });\r\n\r\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\r\n\r\n  inline.breaks = merge({}, inline.gfm, {\r\n    br: replace(inline.br)('{2,}', '*')(),\r\n    text: replace(inline.gfm.text)('{2,}', '*')()\r\n  });\r\n\r\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\r\n\r\n  function InlineLexer(links, options) {\r\n    this.options = options || marked.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer;\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n      throw new\r\n        Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.breaks) {\r\n        this.rules = inline.breaks;\r\n      } else {\r\n        this.rules = inline.gfm;\r\n      }\r\n    } else if (this.options.pedantic) {\r\n      this.rules = inline.pedantic;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Inline Rules\r\n   */\r\n\r\n  InlineLexer.rules = inline;\r\n\r\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\r\n\r\n  InlineLexer.output = function(src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n  };\r\n\r\n  /**\r\n   * Lexing/Compiling\r\n   */\r\n\r\n  InlineLexer.prototype.output = function(src) {\r\n    var out = ''\r\n      , link\r\n      , text\r\n      , href\r\n      , cap;\r\n\r\n    while (src) {\r\n      // escape\r\n      if (cap = this.rules.escape.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += cap[1];\r\n        continue;\r\n      }\r\n\r\n      // autolink\r\n      if (cap = this.rules.autolink.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[2] === '@') {\r\n          text = cap[1].charAt(6) === ':'\r\n            ? this.mangle(cap[1].substring(7))\r\n            : this.mangle(cap[1]);\r\n          href = this.mangle('mailto:') + text;\r\n        } else {\r\n          text = escape(cap[1]);\r\n          href = text;\r\n        }\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // url (gfm)\r\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        text = escape(cap[1]);\r\n        href = text;\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // tag\r\n      if (cap = this.rules.tag.exec(src)) {\r\n        if (!this.inLink && /^<a /i.test(cap[0])) {\r\n          this.inLink = true;\r\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n          this.inLink = false;\r\n        }\r\n        src = src.substring(cap[0].length);\r\n        out += this.options.sanitize\r\n          ? escape(cap[0])\r\n          : cap[0];\r\n        continue;\r\n      }\r\n\r\n      // link\r\n      if (cap = this.rules.link.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        });\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // reflink, nolink\r\n      if ((cap = this.rules.reflink.exec(src))\r\n          || (cap = this.rules.nolink.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n        link = this.links[link.toLowerCase()];\r\n        if (!link || !link.href) {\r\n          out += cap[0].charAt(0);\r\n          src = cap[0].substring(1) + src;\r\n          continue;\r\n        }\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, link);\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // strong\r\n      if (cap = this.rules.strong.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // em\r\n      if (cap = this.rules.em.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.codespan(escape(cap[2], true));\r\n        continue;\r\n      }\r\n\r\n      // br\r\n      if (cap = this.rules.br.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.br();\r\n        continue;\r\n      }\r\n\r\n      // del (gfm)\r\n      if (cap = this.rules.del.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.del(this.output(cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += escape(this.smartypants(cap[0]));\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Compile Link\r\n   */\r\n\r\n  InlineLexer.prototype.outputLink = function(cap, link) {\r\n    var href = escape(link.href)\r\n      , title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n      ? this.renderer.link(href, title, this.output(cap[1]))\r\n      : this.renderer.image(href, title, escape(cap[1]));\r\n  };\r\n\r\n  /**\r\n   * Smartypants Transformations\r\n   */\r\n\r\n  InlineLexer.prototype.smartypants = function(text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n      // em-dashes\r\n      .replace(/--/g, '\\u2014')\r\n      // opening singles\r\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n      // closing singles & apostrophes\r\n      .replace(/'/g, '\\u2019')\r\n      // opening doubles\r\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n      // closing doubles\r\n      .replace(/\"/g, '\\u201d')\r\n      // ellipses\r\n      .replace(/\\.{3}/g, '\\u2026');\r\n  };\r\n\r\n  /**\r\n   * Mangle Links\r\n   */\r\n\r\n  InlineLexer.prototype.mangle = function(text) {\r\n    var out = ''\r\n      , l = text.length\r\n      , i = 0\r\n      , ch;\r\n\r\n    for (; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      if (Math.random() > 0.5) {\r\n        ch = 'x' + ch.toString(16);\r\n      }\r\n      out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Renderer\r\n   */\r\n\r\n  function Renderer(options) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  Renderer.prototype.code = function(code, lang, escaped) {\r\n    if (this.options.highlight) {\r\n      var out = this.options.highlight(code, lang);\r\n      if (out != null && out !== code) {\r\n        escaped = true;\r\n        code = out;\r\n      }\r\n    }\r\n\r\n    if (!lang) {\r\n      return '<pre><code>'\r\n        + (escaped ? code : escape(code, true))\r\n        + '\\n</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n      + this.options.langPrefix\r\n      + escape(lang, true)\r\n      + '\">'\r\n      + (escaped ? code : escape(code, true))\r\n      + '\\n</code></pre>\\n';\r\n  };\r\n\r\n  Renderer.prototype.blockquote = function(quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n  };\r\n\r\n  Renderer.prototype.html = function(html) {\r\n    return html;\r\n  };\r\n\r\n  Renderer.prototype.heading = function(text, level, raw) {\r\n    return '<h'\r\n      + level\r\n      + ' id=\"'\r\n      + this.options.headerPrefix\r\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\r\n      + '\">'\r\n      + text\r\n      + '</h'\r\n      + level\r\n      + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.hr = function() {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.list = function(body, ordered) {\r\n    var type = ordered ? 'ol' : 'ul';\r\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.listitem = function(text) {\r\n    return '<li>' + text + '</li>\\n';\r\n  };\r\n\r\n  Renderer.prototype.paragraph = function(text) {\r\n    return '<p>' + text + '</p>\\n';\r\n  };\r\n\r\n  Renderer.prototype.table = function(header, body) {\r\n    return '<table>\\n'\r\n      + '<thead>\\n'\r\n      + header\r\n      + '</thead>\\n'\r\n      + '<tbody>\\n'\r\n      + body\r\n      + '</tbody>\\n'\r\n      + '</table>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablerow = function(content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablecell = function(content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\r\n      : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n  };\r\n\r\n  // span level renderer\r\n  Renderer.prototype.strong = function(text) {\r\n    return '<strong>' + text + '</strong>';\r\n  };\r\n\r\n  Renderer.prototype.em = function(text) {\r\n    return '<em>' + text + '</em>';\r\n  };\r\n\r\n  Renderer.prototype.codespan = function(text) {\r\n    return '<code>' + text + '</code>';\r\n  };\r\n\r\n  Renderer.prototype.br = function() {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n  };\r\n\r\n  Renderer.prototype.del = function(text) {\r\n    return '<del>' + text + '</del>';\r\n  };\r\n\r\n  Renderer.prototype.link = function(href, title, text) {\r\n    if (this.options.sanitize) {\r\n      try {\r\n        var prot = decodeURIComponent(unescape(href))\r\n          .replace(/[^\\w:]/g, '')\r\n          .toLowerCase();\r\n      } catch (e) {\r\n        return '';\r\n      }\r\n      if (prot.indexOf('javascript:') === 0) {\r\n        return '';\r\n      }\r\n    }\r\n    var out = '<a href=\"' + href + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n  };\r\n\r\n  Renderer.prototype.image = function(href, title, text) {\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Parsing & Compiling\r\n   */\r\n\r\n  function Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || marked.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer;\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n  }\r\n\r\n  /**\r\n   * Static Parse Method\r\n   */\r\n\r\n  Parser.parse = function(src, options, renderer) {\r\n    var parser = new Parser(options, renderer);\r\n    return parser.parse(src);\r\n  };\r\n\r\n  /**\r\n   * Parse Loop\r\n   */\r\n\r\n  Parser.prototype.parse = function(src) {\r\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n      out += this.tok();\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Next Token\r\n   */\r\n\r\n  Parser.prototype.next = function() {\r\n    return this.token = this.tokens.pop();\r\n  };\r\n\r\n  /**\r\n   * Preview Next Token\r\n   */\r\n\r\n  Parser.prototype.peek = function() {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n  };\r\n\r\n  /**\r\n   * Parse Text Tokens\r\n   */\r\n\r\n  Parser.prototype.parseText = function() {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n      body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n  };\r\n\r\n  /**\r\n   * Parse Current Token\r\n   */\r\n\r\n  Parser.prototype.tok = function() {\r\n    switch (this.token.type) {\r\n      case 'space': {\r\n        return '';\r\n      }\r\n      case 'hr': {\r\n        return this.renderer.hr();\r\n      }\r\n      case 'heading': {\r\n        return this.renderer.heading(\r\n          this.inline.output(this.token.text),\r\n          this.token.depth,\r\n          this.token.text);\r\n      }\r\n      case 'code': {\r\n        return this.renderer.code(this.token.text,\r\n          this.token.lang,\r\n          this.token.escaped);\r\n      }\r\n      case 'table': {\r\n        var header = ''\r\n          , body = ''\r\n          , i\r\n          , row\r\n          , cell\r\n          , flags\r\n          , j;\r\n\r\n        // header\r\n        cell = '';\r\n        for (i = 0; i < this.token.header.length; i++) {\r\n          flags = { header: true, align: this.token.align[i] };\r\n          cell += this.renderer.tablecell(\r\n            this.inline.output(this.token.header[i]),\r\n            { header: true, align: this.token.align[i] }\r\n          );\r\n        }\r\n        header += this.renderer.tablerow(cell);\r\n\r\n        for (i = 0; i < this.token.cells.length; i++) {\r\n          row = this.token.cells[i];\r\n\r\n          cell = '';\r\n          for (j = 0; j < row.length; j++) {\r\n            cell += this.renderer.tablecell(\r\n              this.inline.output(row[j]),\r\n              { header: false, align: this.token.align[j] }\r\n            );\r\n          }\r\n\r\n          body += this.renderer.tablerow(cell);\r\n        }\r\n        return this.renderer.table(header, body);\r\n      }\r\n      case 'blockquote_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'blockquote_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.blockquote(body);\r\n      }\r\n      case 'list_start': {\r\n        var body = ''\r\n          , ordered = this.token.ordered;\r\n\r\n        while (this.next().type !== 'list_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.list(body, ordered);\r\n      }\r\n      case 'list_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.token.type === 'text'\r\n            ? this.parseText()\r\n            : this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'loose_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'html': {\r\n        var html = !this.token.pre && !this.options.pedantic\r\n          ? this.inline.output(this.token.text)\r\n          : this.token.text;\r\n        return this.renderer.html(html);\r\n      }\r\n      case 'paragraph': {\r\n        return this.renderer.paragraph(this.inline.output(this.token.text));\r\n      }\r\n      case 'text': {\r\n        return this.renderer.paragraph(this.parseText());\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  function escape(html, encode) {\r\n    return html\r\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;');\r\n  }\r\n\r\n  function unescape(html) {\r\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\r\n      n = n.toLowerCase();\r\n      if (n === 'colon') return ':';\r\n      if (n.charAt(0) === '#') {\r\n        return n.charAt(1) === 'x'\r\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n          : String.fromCharCode(+n.substring(1));\r\n      }\r\n      return '';\r\n    });\r\n  }\r\n\r\n  function replace(regex, opt) {\r\n    regex = regex.source;\r\n    opt = opt || '';\r\n    return function self(name, val) {\r\n      if (!name) return new RegExp(regex, opt);\r\n      val = val.source || val;\r\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n      regex = regex.replace(name, val);\r\n      return self;\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n  noop.exec = noop;\r\n\r\n  function merge(obj) {\r\n    var i = 1\r\n      , target\r\n      , key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n      target = arguments[i];\r\n      for (key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n          obj[key] = target[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  /**\r\n   * Marked\r\n   */\r\n\r\n  function marked(src, opt, callback) {\r\n    if (callback || typeof opt === 'function') {\r\n      if (!callback) {\r\n        callback = opt;\r\n        opt = null;\r\n      }\r\n\r\n      opt = merge({}, marked.defaults, opt || {});\r\n\r\n      var highlight = opt.highlight\r\n        , tokens\r\n        , pending\r\n        , i = 0;\r\n\r\n      try {\r\n        tokens = Lexer.lex(src, opt)\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n\r\n      pending = tokens.length;\r\n\r\n      var done = function(err) {\r\n        if (err) {\r\n          opt.highlight = highlight;\r\n          return callback(err);\r\n        }\r\n\r\n        var out;\r\n\r\n        try {\r\n          out = Parser.parse(tokens, opt);\r\n        } catch (e) {\r\n          err = e;\r\n        }\r\n\r\n        opt.highlight = highlight;\r\n\r\n        return err\r\n          ? callback(err)\r\n          : callback(null, out);\r\n      };\r\n\r\n      if (!highlight || highlight.length < 3) {\r\n        return done();\r\n      }\r\n\r\n      delete opt.highlight;\r\n\r\n      if (!pending) return done();\r\n\r\n      for (; i < tokens.length; i++) {\r\n        (function(token) {\r\n          if (token.type !== 'code') {\r\n            return --pending || done();\r\n          }\r\n          return highlight(token.text, token.lang, function(err, code) {\r\n            if (err) return done(err);\r\n            if (code == null || code === token.text) {\r\n              return --pending || done();\r\n            }\r\n            token.text = code;\r\n            token.escaped = true;\r\n            --pending || done();\r\n          });\r\n        })(tokens[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    try {\r\n      if (opt) opt = merge({}, marked.defaults, opt);\r\n      return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n      if ((opt || marked.defaults).silent) {\r\n        return '<p>An error occured:</p><pre>'\r\n          + escape(e.message + '', true)\r\n          + '</pre>';\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Options\r\n   */\r\n\r\n  marked.options =\r\n  marked.setOptions = function(opt) {\r\n    merge(marked.defaults, opt);\r\n    return marked;\r\n  };\r\n\r\n  marked.defaults = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: false,\r\n    silent: false,\r\n    highlight: null,\r\n    langPrefix: 'lang-',\r\n    smartypants: false,\r\n    headerPrefix: '',\r\n    renderer: new Renderer,\r\n    xhtml: false\r\n  };\r\n\r\n  /**\r\n   * Expose\r\n   */\r\n\r\n  marked.Parser = Parser;\r\n  marked.parser = Parser.parse;\r\n\r\n  marked.Renderer = Renderer;\r\n\r\n  marked.Lexer = Lexer;\r\n  marked.lexer = Lexer.lex;\r\n\r\n  marked.InlineLexer = InlineLexer;\r\n  marked.inlineLexer = InlineLexer.output;\r\n\r\n  marked.parse = marked;\r\n\r\n  return marked;\r\n});\ndefine('skylark-utils-md/Parser',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/marked\"\r\n], function(langx,markdown, marked) {\r\n\tvar Parser = marked.Parser;\r\n\r\n   langx.mixin(Parser,marked);\r\n\r\n   return Parser ;\r\n});\ndefine('skylark-utils-md/primitives/turndown',[],function () { \r\n  'use strict';\r\n\r\n  // original version : 5.0.1\r\n  function extend (destination) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\r\n      }\r\n    }\r\n    return destination\r\n  }\r\n\r\n  function repeat (character, count) {\r\n    return Array(count + 1).join(character)\r\n  }\r\n\r\n  var blockElements = [\r\n    'address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas',\r\n    'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\r\n    'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\r\n    'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\r\n    'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\r\n  ];\r\n\r\n  function isBlock (node) {\r\n    return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidElements = [\r\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\r\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\r\n  ];\r\n\r\n  function isVoid (node) {\r\n    return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidSelector = voidElements.join();\r\n  function hasVoid (node) {\r\n    return node.querySelector && node.querySelector(voidSelector)\r\n  }\r\n\r\n  var rules = {};\r\n\r\n  rules.paragraph = {\r\n    filter: 'p',\r\n\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.lineBreak = {\r\n    filter: 'br',\r\n\r\n    replacement: function (content, node, options) {\r\n      return options.br + '\\n'\r\n    }\r\n  };\r\n\r\n  rules.heading = {\r\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n    replacement: function (content, node, options) {\r\n      var hLevel = Number(node.nodeName.charAt(1));\r\n\r\n      if (options.headingStyle === 'setext' && hLevel < 3) {\r\n        var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\r\n        return (\r\n          '\\n\\n' + content + '\\n' + underline + '\\n\\n'\r\n        )\r\n      } else {\r\n        return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.blockquote = {\r\n    filter: 'blockquote',\r\n\r\n    replacement: function (content) {\r\n      content = content.replace(/^\\n+|\\n+$/g, '');\r\n      content = content.replace(/^/gm, '> ');\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.list = {\r\n    filter: ['ul', 'ol'],\r\n\r\n    replacement: function (content, node) {\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\r\n        return '\\n' + content\r\n      } else {\r\n        return '\\n\\n' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.listItem = {\r\n    filter: 'li',\r\n\r\n    replacement: function (content, node, options) {\r\n      content = content\r\n        .replace(/^\\n+/, '') // remove leading newlines\r\n        .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\r\n        .replace(/\\n/gm, '\\n    '); // indent\r\n      var prefix = options.bulletListMarker + '   ';\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'OL') {\r\n        var start = parent.getAttribute('start');\r\n        var index = Array.prototype.indexOf.call(parent.children, node);\r\n        prefix = (start ? Number(start) + index : index + 1) + '.  ';\r\n      }\r\n      return (\r\n        prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.indentedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'indented' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      return (\r\n        '\\n\\n    ' +\r\n        node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\r\n        '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.fencedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'fenced' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var className = node.firstChild.className || '';\r\n      var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\r\n\r\n      return (\r\n        '\\n\\n' + options.fence + language + '\\n' +\r\n        node.firstChild.textContent +\r\n        '\\n' + options.fence + '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.horizontalRule = {\r\n    filter: 'hr',\r\n\r\n    replacement: function (content, node, options) {\r\n      return '\\n\\n' + options.hr + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.inlineLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'inlined' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      return '[' + content + '](' + href + title + ')'\r\n    }\r\n  };\r\n\r\n  rules.referenceLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'referenced' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      var replacement;\r\n      var reference;\r\n\r\n      switch (options.linkReferenceStyle) {\r\n        case 'collapsed':\r\n          replacement = '[' + content + '][]';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        case 'shortcut':\r\n          replacement = '[' + content + ']';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        default:\r\n          var id = this.references.length + 1;\r\n          replacement = '[' + content + '][' + id + ']';\r\n          reference = '[' + id + ']: ' + href + title;\r\n      }\r\n\r\n      this.references.push(reference);\r\n      return replacement\r\n    },\r\n\r\n    references: [],\r\n\r\n    append: function (options) {\r\n      var references = '';\r\n      if (this.references.length) {\r\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\r\n        this.references = []; // Reset references\r\n      }\r\n      return references\r\n    }\r\n  };\r\n\r\n  rules.emphasis = {\r\n    filter: ['em', 'i'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.emDelimiter + content + options.emDelimiter\r\n    }\r\n  };\r\n\r\n  rules.strong = {\r\n    filter: ['strong', 'b'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.strongDelimiter + content + options.strongDelimiter\r\n    }\r\n  };\r\n\r\n  rules.code = {\r\n    filter: function (node) {\r\n      var hasSiblings = node.previousSibling || node.nextSibling;\r\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\r\n\r\n      return node.nodeName === 'CODE' && !isCodeBlock\r\n    },\r\n\r\n    replacement: function (content) {\r\n      if (!content.trim()) return ''\r\n\r\n      var delimiter = '`';\r\n      var leadingSpace = '';\r\n      var trailingSpace = '';\r\n      var matches = content.match(/`+/gm);\r\n      if (matches) {\r\n        if (/^`/.test(content)) leadingSpace = ' ';\r\n        if (/`$/.test(content)) trailingSpace = ' ';\r\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\r\n      }\r\n\r\n      return delimiter + leadingSpace + content + trailingSpace + delimiter\r\n    }\r\n  };\r\n\r\n  rules.image = {\r\n    filter: 'img',\r\n\r\n    replacement: function (content, node) {\r\n      var alt = node.alt || '';\r\n      var src = node.getAttribute('src') || '';\r\n      var title = node.title || '';\r\n      var titlePart = title ? ' \"' + title + '\"' : '';\r\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manages a collection of rules used to convert HTML to Markdown\r\n   */\r\n\r\n  function Rules (options) {\r\n    this.options = options;\r\n    this._keep = [];\r\n    this._remove = [];\r\n\r\n    this.blankRule = {\r\n      replacement: options.blankReplacement\r\n    };\r\n\r\n    this.keepReplacement = options.keepReplacement;\r\n\r\n    this.defaultRule = {\r\n      replacement: options.defaultReplacement\r\n    };\r\n\r\n    this.array = [];\r\n    for (var key in options.rules) this.array.push(options.rules[key]);\r\n  }\r\n\r\n  Rules.prototype = {\r\n    add: function (key, rule) {\r\n      this.array.unshift(rule);\r\n    },\r\n\r\n    keep: function (filter) {\r\n      this._keep.unshift({\r\n        filter: filter,\r\n        replacement: this.keepReplacement\r\n      });\r\n    },\r\n\r\n    remove: function (filter) {\r\n      this._remove.unshift({\r\n        filter: filter,\r\n        replacement: function () {\r\n          return ''\r\n        }\r\n      });\r\n    },\r\n\r\n    forNode: function (node) {\r\n      if (node.isBlank) return this.blankRule\r\n      var rule;\r\n\r\n      if ((rule = findRule(this.array, node, this.options))) return rule\r\n      if ((rule = findRule(this._keep, node, this.options))) return rule\r\n      if ((rule = findRule(this._remove, node, this.options))) return rule\r\n\r\n      return this.defaultRule\r\n    },\r\n\r\n    forEach: function (fn) {\r\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\r\n    }\r\n  };\r\n\r\n  function findRule (rules, node, options) {\r\n    for (var i = 0; i < rules.length; i++) {\r\n      var rule = rules[i];\r\n      if (filterValue(rule, node, options)) return rule\r\n    }\r\n    return void 0\r\n  }\r\n\r\n  function filterValue (rule, node, options) {\r\n    var filter = rule.filter;\r\n    if (typeof filter === 'string') {\r\n      if (filter === node.nodeName.toLowerCase()) return true\r\n    } else if (Array.isArray(filter)) {\r\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\r\n    } else if (typeof filter === 'function') {\r\n      if (filter.call(rule, node, options)) return true\r\n    } else {\r\n      throw new TypeError('`filter` needs to be a string, array, or function')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The collapseWhitespace function is adapted from collapse-whitespace\r\n   * by Luc Thevenard.\r\n   *\r\n   * The MIT License (MIT)\r\n   *\r\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to deal\r\n   * in the Software without restriction, including without limitation the rights\r\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in\r\n   * all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n   * THE SOFTWARE.\r\n   */\r\n\r\n  /**\r\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  function collapseWhitespace (options) {\r\n    var element = options.element;\r\n    var isBlock = options.isBlock;\r\n    var isVoid = options.isVoid;\r\n    var isPre = options.isPre || function (node) {\r\n      return node.nodeName === 'PRE'\r\n    };\r\n\r\n    if (!element.firstChild || isPre(element)) return\r\n\r\n    var prevText = null;\r\n    var prevVoid = false;\r\n\r\n    var prev = null;\r\n    var node = next(prev, element, isPre);\r\n\r\n    while (node !== element) {\r\n      if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\r\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\r\n\r\n        if ((!prevText || / $/.test(prevText.data)) &&\r\n            !prevVoid && text[0] === ' ') {\r\n          text = text.substr(1);\r\n        }\r\n\r\n        // `text` might be empty at this point.\r\n        if (!text) {\r\n          node = remove(node);\r\n          continue\r\n        }\r\n\r\n        node.data = text;\r\n\r\n        prevText = node;\r\n      } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\r\n        if (isBlock(node) || node.nodeName === 'BR') {\r\n          if (prevText) {\r\n            prevText.data = prevText.data.replace(/ $/, '');\r\n          }\r\n\r\n          prevText = null;\r\n          prevVoid = false;\r\n        } else if (isVoid(node)) {\r\n          // Avoid trimming space around non-block, non-BR void elements.\r\n          prevText = null;\r\n          prevVoid = true;\r\n        }\r\n      } else {\r\n        node = remove(node);\r\n        continue\r\n      }\r\n\r\n      var nextNode = next(prev, node, isPre);\r\n      prev = node;\r\n      node = nextNode;\r\n    }\r\n\r\n    if (prevText) {\r\n      prevText.data = prevText.data.replace(/ $/, '');\r\n      if (!prevText.data) {\r\n        remove(prevText);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove(node) removes the given node from the DOM and returns the\r\n   * next node in the sequence.\r\n   *\r\n   * @param {Node} node\r\n   * @return {Node} node\r\n   */\r\n  function remove (node) {\r\n    var next = node.nextSibling || node.parentNode;\r\n\r\n    node.parentNode.removeChild(node);\r\n\r\n    return next\r\n  }\r\n\r\n  /**\r\n   * next(prev, current, isPre) returns the next node in the sequence, given the\r\n   * current and previous nodes.\r\n   *\r\n   * @param {Node} prev\r\n   * @param {Node} current\r\n   * @param {Function} isPre\r\n   * @return {Node}\r\n   */\r\n  function next (prev, current, isPre) {\r\n    if ((prev && prev.parentNode === current) || isPre(current)) {\r\n      return current.nextSibling || current.parentNode\r\n    }\r\n\r\n    return current.firstChild || current.nextSibling || current.parentNode\r\n  }\r\n\r\n  /*\r\n   * Set up window for Node.js\r\n   */\r\n\r\n  var root = (typeof window !== 'undefined' ? window : {});\r\n\r\n  /*\r\n   * Parsing HTML strings\r\n   */\r\n\r\n  function canParseHTMLNatively () {\r\n    var Parser = root.DOMParser;\r\n    var canParse = false;\r\n\r\n    // Adapted from https://gist.github.com/1129031\r\n    // Firefox/Opera/IE throw errors on unsupported types\r\n    try {\r\n      // WebKit returns null on unsupported types\r\n      if (new Parser().parseFromString('', 'text/html')) {\r\n        canParse = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    return canParse\r\n  }\r\n\r\n  function createHTMLParser () {\r\n    var Parser = function () {};\r\n\r\n    {\r\n      var JSDOM = require('jsdom').JSDOM;\r\n      Parser.prototype.parseFromString = function (string) {\r\n        return new JSDOM(string).window.document\r\n      };\r\n    }\r\n    return Parser\r\n  }\r\n\r\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\r\n\r\n  function RootNode (input) {\r\n    var root;\r\n    if (typeof input === 'string') {\r\n      var doc = htmlParser().parseFromString(\r\n        // DOM parsers arrange elements in the <head> and <body>.\r\n        // Wrapping in a custom element ensures elements are reliably arranged in\r\n        // a single element.\r\n        '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\r\n        'text/html'\r\n      );\r\n      root = doc.getElementById('turndown-root');\r\n    } else {\r\n      root = input.cloneNode(true);\r\n    }\r\n    collapseWhitespace({\r\n      element: root,\r\n      isBlock: isBlock,\r\n      isVoid: isVoid\r\n    });\r\n\r\n    return root\r\n  }\r\n\r\n  var _htmlParser;\r\n  function htmlParser () {\r\n    _htmlParser = _htmlParser || new HTMLParser();\r\n    return _htmlParser\r\n  }\r\n\r\n  function Node (node) {\r\n    node.isBlock = isBlock(node);\r\n    node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\r\n    node.isBlank = isBlank(node);\r\n    node.flankingWhitespace = flankingWhitespace(node);\r\n    return node\r\n  }\r\n\r\n  function isBlank (node) {\r\n    return (\r\n      ['A', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'].indexOf(node.nodeName) === -1 &&\r\n      /^\\s*$/i.test(node.textContent) &&\r\n      !isVoid(node) &&\r\n      !hasVoid(node)\r\n    )\r\n  }\r\n\r\n  function flankingWhitespace (node) {\r\n    var leading = '';\r\n    var trailing = '';\r\n\r\n    if (!node.isBlock) {\r\n      var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent);\r\n      var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent);\r\n\r\n      if (hasLeading && !isFlankedByWhitespace('left', node)) {\r\n        leading = ' ';\r\n      }\r\n      if (hasTrailing && !isFlankedByWhitespace('right', node)) {\r\n        trailing = ' ';\r\n      }\r\n    }\r\n\r\n    return { leading: leading, trailing: trailing }\r\n  }\r\n\r\n  function isFlankedByWhitespace (side, node) {\r\n    var sibling;\r\n    var regExp;\r\n    var isFlanked;\r\n\r\n    if (side === 'left') {\r\n      sibling = node.previousSibling;\r\n      regExp = / $/;\r\n    } else {\r\n      sibling = node.nextSibling;\r\n      regExp = /^ /;\r\n    }\r\n\r\n    if (sibling) {\r\n      if (sibling.nodeType === 3) {\r\n        isFlanked = regExp.test(sibling.nodeValue);\r\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\r\n        isFlanked = regExp.test(sibling.textContent);\r\n      }\r\n    }\r\n    return isFlanked\r\n  }\r\n\r\n  var reduce = Array.prototype.reduce;\r\n  var leadingNewLinesRegExp = /^\\n*/;\r\n  var trailingNewLinesRegExp = /\\n*$/;\r\n  var escapes = [\r\n    [/\\\\/g, '\\\\\\\\'],\r\n    [/\\*/g, '\\\\*'],\r\n    [/^-/g, '\\\\-'],\r\n    [/^\\+ /g, '\\\\+ '],\r\n    [/^(=+)/g, '\\\\$1'],\r\n    [/^(#{1,6}) /g, '\\\\$1 '],\r\n    [/`/g, '\\\\`'],\r\n    [/^~~~/g, '\\\\~~~'],\r\n    [/\\[/g, '\\\\['],\r\n    [/\\]/g, '\\\\]'],\r\n    [/^>/g, '\\\\>'],\r\n    [/_/g, '\\\\_'],\r\n    [/^(\\d+)\\. /g, '$1\\\\. ']\r\n  ];\r\n\r\n  function TurndownService (options) {\r\n    if (!(this instanceof TurndownService)) return new TurndownService(options)\r\n\r\n    var defaults = {\r\n      rules: rules,\r\n      headingStyle: 'setext',\r\n      hr: '* * *',\r\n      bulletListMarker: '*',\r\n      codeBlockStyle: 'indented',\r\n      fence: '```',\r\n      emDelimiter: '_',\r\n      strongDelimiter: '**',\r\n      linkStyle: 'inlined',\r\n      linkReferenceStyle: 'full',\r\n      br: '  ',\r\n      blankReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' : ''\r\n      },\r\n      keepReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\r\n      },\r\n      defaultReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\r\n      }\r\n    };\r\n    this.options = extend({}, defaults, options);\r\n    this.rules = new Rules(this.options);\r\n  }\r\n\r\n  TurndownService.prototype = {\r\n    /**\r\n     * The entry point for converting a string or DOM node to Markdown\r\n     * @public\r\n     * @param {String|HTMLElement} input The string or DOM node to convert\r\n     * @returns A Markdown representation of the input\r\n     * @type String\r\n     */\r\n\r\n    turndown: function (input) {\r\n      if (!canConvert(input)) {\r\n        throw new TypeError(\r\n          input + ' is not a string, or an element/document/fragment node.'\r\n        )\r\n      }\r\n\r\n      if (input === '') return ''\r\n\r\n      var output = process.call(this, new RootNode(input));\r\n      return postProcess.call(this, output)\r\n    },\r\n\r\n    /**\r\n     * Add one or more plugins\r\n     * @public\r\n     * @param {Function|Array} plugin The plugin or array of plugins to add\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    use: function (plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\r\n      } else if (typeof plugin === 'function') {\r\n        plugin(this);\r\n      } else {\r\n        throw new TypeError('plugin must be a Function or an Array of Functions')\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Adds a rule\r\n     * @public\r\n     * @param {String} key The unique key of the rule\r\n     * @param {Object} rule The rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    addRule: function (key, rule) {\r\n      this.rules.add(key, rule);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Keep a node (as HTML) that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    keep: function (filter) {\r\n      this.rules.keep(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Remove a node that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    remove: function (filter) {\r\n      this.rules.remove(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Escapes Markdown syntax\r\n     * @public\r\n     * @param {String} string The string to escape\r\n     * @returns A string with Markdown syntax escaped\r\n     * @type String\r\n     */\r\n\r\n    escape: function (string) {\r\n      return escapes.reduce(function (accumulator, escape) {\r\n        return accumulator.replace(escape[0], escape[1])\r\n      }, string)\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reduces a DOM node down to its Markdown string equivalent\r\n   * @private\r\n   * @param {HTMLElement} parentNode The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function process (parentNode) {\r\n    var self = this;\r\n    return reduce.call(parentNode.childNodes, function (output, node) {\r\n      node = new Node(node);\r\n\r\n      var replacement = '';\r\n      if (node.nodeType === 3) {\r\n        replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\r\n      } else if (node.nodeType === 1) {\r\n        replacement = replacementForNode.call(self, node);\r\n      }\r\n\r\n      return join(output, replacement)\r\n    }, '')\r\n  }\r\n\r\n  /**\r\n   * Appends strings as each rule requires and trims the output\r\n   * @private\r\n   * @param {String} output The conversion output\r\n   * @returns A trimmed version of the ouput\r\n   * @type String\r\n   */\r\n\r\n  function postProcess (output) {\r\n    var self = this;\r\n    this.rules.forEach(function (rule) {\r\n      if (typeof rule.append === 'function') {\r\n        output = join(output, rule.append(self.options));\r\n      }\r\n    });\r\n\r\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\r\n  }\r\n\r\n  /**\r\n   * Converts an element node to its Markdown equivalent\r\n   * @private\r\n   * @param {HTMLElement} node The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function replacementForNode (node) {\r\n    var rule = this.rules.forNode(node);\r\n    var content = process.call(this, node);\r\n    var whitespace = node.flankingWhitespace;\r\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\r\n    return (\r\n      whitespace.leading +\r\n      rule.replacement(content, node, this.options) +\r\n      whitespace.trailing\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Determines the new lines between the current output and the replacement\r\n   * @private\r\n   * @param {String} output The current conversion output\r\n   * @param {String} replacement The string to append to the output\r\n   * @returns The whitespace to separate the current output and the replacement\r\n   * @type String\r\n   */\r\n\r\n  function separatingNewlines (output, replacement) {\r\n    var newlines = [\r\n      output.match(trailingNewLinesRegExp)[0],\r\n      replacement.match(leadingNewLinesRegExp)[0]\r\n    ].sort();\r\n    var maxNewlines = newlines[newlines.length - 1];\r\n    return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\r\n  }\r\n\r\n  function join (string1, string2) {\r\n    var separator = separatingNewlines(string1, string2);\r\n\r\n    // Remove trailing/leading newlines and replace with separator\r\n    string1 = string1.replace(trailingNewLinesRegExp, '');\r\n    string2 = string2.replace(leadingNewLinesRegExp, '');\r\n\r\n    return string1 + separator + string2\r\n  }\r\n\r\n  /**\r\n   * Determines whether an input can be converted\r\n   * @private\r\n   * @param {String|HTMLElement} input Describe this parameter\r\n   * @returns Describe what it returns\r\n   * @type String|Object|Array|Boolean|Number\r\n   */\r\n\r\n  function canConvert (input) {\r\n    return (\r\n      input != null && (\r\n        typeof input === 'string' ||\r\n        (input.nodeType && (\r\n          input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\r\n        ))\r\n      )\r\n    )\r\n  }\r\n\r\n  return TurndownService;\r\n\r\n});\r\n\ndefine('skylark-utils-md/Turndown',[\r\n\t\"skylark-langx/langx\",\r\n    \"./markdown\",\r\n    \"./primitives/turndown\"\r\n], function(langx,markdown, TurndownService) {\r\n\r\n   return markdown.Turndown =  TurndownService;\r\n});\ndefine('skylark-utils-md/main',[\r\n    \"./markdown\",\r\n    \"./Parser\",\r\n    \"./Turndown\"\r\n], function(markdown) {\r\n    return markdown;\r\n});\r\n\ndefine('skylark-utils-md', ['skylark-utils-md/main'], function (main) { return main; });\n\n"]}