{"version":3,"sources":["primitives/turndown.js"],"names":["define","extend","destination","i","arguments","length","source","key","hasOwnProperty","repeat","character","count","Array","join","isBlock","node","blockElements","indexOf","nodeName","toLowerCase","isVoid","voidElements","hasVoid","querySelector","voidSelector","Rules","options","this","_keep","_remove","blankRule","replacement","blankReplacement","keepReplacement","defaultRule","defaultReplacement","array","rules","push","findRule","rule","filterValue","filter","isArray","TypeError","call","collapseWhitespace","element","isPre","firstChild","prevText","prevVoid","prev","next","nodeType","text","data","replace","test","substr","remove","nextNode","nextSibling","parentNode","removeChild","current","canParseHTMLNatively","Parser","root","DOMParser","canParse","parseFromString","e","createHTMLParser","JSDOM","require","prototype","string","window","document","RootNode","input","doc","htmlParser","getElementById","cloneNode","_htmlParser","HTMLParser","Node","isCode","isBlank","flankingWhitespace","textContent","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nodeValue","TurndownService","defaults","headingStyle","hr","bulletListMarker","codeBlockStyle","fence","emDelimiter","strongDelimiter","linkStyle","linkReferenceStyle","br","content","outerHTML","process","self","reduce","childNodes","output","escape","replacementForNode","postProcess","forEach","append","forNode","whitespace","trim","separatingNewlines","newlines","match","trailingNewLinesRegExp","leadingNewLinesRegExp","sort","maxNewlines","string1","string2","separator","canConvert","paragraph","lineBreak","heading","hLevel","Number","charAt","underline","blockquote","list","parent","lastElementChild","listItem","prefix","start","getAttribute","index","children","indentedCodeBlock","fencedCodeBlock","className","language","horizontalRule","inlineLink","href","title","referenceLink","reference","id","references","emphasis","strong","code","hasSiblings","isCodeBlock","delimiter","leadingSpace","trailingSpace","matches","image","alt","src","titlePart","add","unshift","keep","fn","escapes","turndown","use","plugin","addRule","accumulator"],"mappings":"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","file":"../../primitives/turndown.js","sourcesContent":["define([],function () { \r\n  'use strict';\r\n\r\n  // original version : 5.0.1\r\n  function extend (destination) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\r\n      }\r\n    }\r\n    return destination\r\n  }\r\n\r\n  function repeat (character, count) {\r\n    return Array(count + 1).join(character)\r\n  }\r\n\r\n  var blockElements = [\r\n    'address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas',\r\n    'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\r\n    'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\r\n    'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\r\n    'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\r\n  ];\r\n\r\n  function isBlock (node) {\r\n    return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidElements = [\r\n    'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\r\n    'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\r\n  ];\r\n\r\n  function isVoid (node) {\r\n    return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  }\r\n\r\n  var voidSelector = voidElements.join();\r\n  function hasVoid (node) {\r\n    return node.querySelector && node.querySelector(voidSelector)\r\n  }\r\n\r\n  var rules = {};\r\n\r\n  rules.paragraph = {\r\n    filter: 'p',\r\n\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.lineBreak = {\r\n    filter: 'br',\r\n\r\n    replacement: function (content, node, options) {\r\n      return options.br + '\\n'\r\n    }\r\n  };\r\n\r\n  rules.heading = {\r\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n\r\n    replacement: function (content, node, options) {\r\n      var hLevel = Number(node.nodeName.charAt(1));\r\n\r\n      if (options.headingStyle === 'setext' && hLevel < 3) {\r\n        var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\r\n        return (\r\n          '\\n\\n' + content + '\\n' + underline + '\\n\\n'\r\n        )\r\n      } else {\r\n        return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.blockquote = {\r\n    filter: 'blockquote',\r\n\r\n    replacement: function (content) {\r\n      content = content.replace(/^\\n+|\\n+$/g, '');\r\n      content = content.replace(/^/gm, '> ');\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.list = {\r\n    filter: ['ul', 'ol'],\r\n\r\n    replacement: function (content, node) {\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\r\n        return '\\n' + content\r\n      } else {\r\n        return '\\n\\n' + content + '\\n\\n'\r\n      }\r\n    }\r\n  };\r\n\r\n  rules.listItem = {\r\n    filter: 'li',\r\n\r\n    replacement: function (content, node, options) {\r\n      content = content\r\n        .replace(/^\\n+/, '') // remove leading newlines\r\n        .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\r\n        .replace(/\\n/gm, '\\n    '); // indent\r\n      var prefix = options.bulletListMarker + '   ';\r\n      var parent = node.parentNode;\r\n      if (parent.nodeName === 'OL') {\r\n        var start = parent.getAttribute('start');\r\n        var index = Array.prototype.indexOf.call(parent.children, node);\r\n        prefix = (start ? Number(start) + index : index + 1) + '.  ';\r\n      }\r\n      return (\r\n        prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.indentedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'indented' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      return (\r\n        '\\n\\n    ' +\r\n        node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\r\n        '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.fencedCodeBlock = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.codeBlockStyle === 'fenced' &&\r\n        node.nodeName === 'PRE' &&\r\n        node.firstChild &&\r\n        node.firstChild.nodeName === 'CODE'\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var className = node.firstChild.className || '';\r\n      var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\r\n\r\n      return (\r\n        '\\n\\n' + options.fence + language + '\\n' +\r\n        node.firstChild.textContent +\r\n        '\\n' + options.fence + '\\n\\n'\r\n      )\r\n    }\r\n  };\r\n\r\n  rules.horizontalRule = {\r\n    filter: 'hr',\r\n\r\n    replacement: function (content, node, options) {\r\n      return '\\n\\n' + options.hr + '\\n\\n'\r\n    }\r\n  };\r\n\r\n  rules.inlineLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'inlined' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      return '[' + content + '](' + href + title + ')'\r\n    }\r\n  };\r\n\r\n  rules.referenceLink = {\r\n    filter: function (node, options) {\r\n      return (\r\n        options.linkStyle === 'referenced' &&\r\n        node.nodeName === 'A' &&\r\n        node.getAttribute('href')\r\n      )\r\n    },\r\n\r\n    replacement: function (content, node, options) {\r\n      var href = node.getAttribute('href');\r\n      var title = node.title ? ' \"' + node.title + '\"' : '';\r\n      var replacement;\r\n      var reference;\r\n\r\n      switch (options.linkReferenceStyle) {\r\n        case 'collapsed':\r\n          replacement = '[' + content + '][]';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        case 'shortcut':\r\n          replacement = '[' + content + ']';\r\n          reference = '[' + content + ']: ' + href + title;\r\n          break\r\n        default:\r\n          var id = this.references.length + 1;\r\n          replacement = '[' + content + '][' + id + ']';\r\n          reference = '[' + id + ']: ' + href + title;\r\n      }\r\n\r\n      this.references.push(reference);\r\n      return replacement\r\n    },\r\n\r\n    references: [],\r\n\r\n    append: function (options) {\r\n      var references = '';\r\n      if (this.references.length) {\r\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\r\n        this.references = []; // Reset references\r\n      }\r\n      return references\r\n    }\r\n  };\r\n\r\n  rules.emphasis = {\r\n    filter: ['em', 'i'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.emDelimiter + content + options.emDelimiter\r\n    }\r\n  };\r\n\r\n  rules.strong = {\r\n    filter: ['strong', 'b'],\r\n\r\n    replacement: function (content, node, options) {\r\n      if (!content.trim()) return ''\r\n      return options.strongDelimiter + content + options.strongDelimiter\r\n    }\r\n  };\r\n\r\n  rules.code = {\r\n    filter: function (node) {\r\n      var hasSiblings = node.previousSibling || node.nextSibling;\r\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\r\n\r\n      return node.nodeName === 'CODE' && !isCodeBlock\r\n    },\r\n\r\n    replacement: function (content) {\r\n      if (!content.trim()) return ''\r\n\r\n      var delimiter = '`';\r\n      var leadingSpace = '';\r\n      var trailingSpace = '';\r\n      var matches = content.match(/`+/gm);\r\n      if (matches) {\r\n        if (/^`/.test(content)) leadingSpace = ' ';\r\n        if (/`$/.test(content)) trailingSpace = ' ';\r\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\r\n      }\r\n\r\n      return delimiter + leadingSpace + content + trailingSpace + delimiter\r\n    }\r\n  };\r\n\r\n  rules.image = {\r\n    filter: 'img',\r\n\r\n    replacement: function (content, node) {\r\n      var alt = node.alt || '';\r\n      var src = node.getAttribute('src') || '';\r\n      var title = node.title || '';\r\n      var titlePart = title ? ' \"' + title + '\"' : '';\r\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manages a collection of rules used to convert HTML to Markdown\r\n   */\r\n\r\n  function Rules (options) {\r\n    this.options = options;\r\n    this._keep = [];\r\n    this._remove = [];\r\n\r\n    this.blankRule = {\r\n      replacement: options.blankReplacement\r\n    };\r\n\r\n    this.keepReplacement = options.keepReplacement;\r\n\r\n    this.defaultRule = {\r\n      replacement: options.defaultReplacement\r\n    };\r\n\r\n    this.array = [];\r\n    for (var key in options.rules) this.array.push(options.rules[key]);\r\n  }\r\n\r\n  Rules.prototype = {\r\n    add: function (key, rule) {\r\n      this.array.unshift(rule);\r\n    },\r\n\r\n    keep: function (filter) {\r\n      this._keep.unshift({\r\n        filter: filter,\r\n        replacement: this.keepReplacement\r\n      });\r\n    },\r\n\r\n    remove: function (filter) {\r\n      this._remove.unshift({\r\n        filter: filter,\r\n        replacement: function () {\r\n          return ''\r\n        }\r\n      });\r\n    },\r\n\r\n    forNode: function (node) {\r\n      if (node.isBlank) return this.blankRule\r\n      var rule;\r\n\r\n      if ((rule = findRule(this.array, node, this.options))) return rule\r\n      if ((rule = findRule(this._keep, node, this.options))) return rule\r\n      if ((rule = findRule(this._remove, node, this.options))) return rule\r\n\r\n      return this.defaultRule\r\n    },\r\n\r\n    forEach: function (fn) {\r\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\r\n    }\r\n  };\r\n\r\n  function findRule (rules, node, options) {\r\n    for (var i = 0; i < rules.length; i++) {\r\n      var rule = rules[i];\r\n      if (filterValue(rule, node, options)) return rule\r\n    }\r\n    return void 0\r\n  }\r\n\r\n  function filterValue (rule, node, options) {\r\n    var filter = rule.filter;\r\n    if (typeof filter === 'string') {\r\n      if (filter === node.nodeName.toLowerCase()) return true\r\n    } else if (Array.isArray(filter)) {\r\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\r\n    } else if (typeof filter === 'function') {\r\n      if (filter.call(rule, node, options)) return true\r\n    } else {\r\n      throw new TypeError('`filter` needs to be a string, array, or function')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The collapseWhitespace function is adapted from collapse-whitespace\r\n   * by Luc Thevenard.\r\n   *\r\n   * The MIT License (MIT)\r\n   *\r\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to deal\r\n   * in the Software without restriction, including without limitation the rights\r\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in\r\n   * all copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n   * THE SOFTWARE.\r\n   */\r\n\r\n  /**\r\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\r\n   *\r\n   * @param {Object} options\r\n   */\r\n  function collapseWhitespace (options) {\r\n    var element = options.element;\r\n    var isBlock = options.isBlock;\r\n    var isVoid = options.isVoid;\r\n    var isPre = options.isPre || function (node) {\r\n      return node.nodeName === 'PRE'\r\n    };\r\n\r\n    if (!element.firstChild || isPre(element)) return\r\n\r\n    var prevText = null;\r\n    var prevVoid = false;\r\n\r\n    var prev = null;\r\n    var node = next(prev, element, isPre);\r\n\r\n    while (node !== element) {\r\n      if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\r\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\r\n\r\n        if ((!prevText || / $/.test(prevText.data)) &&\r\n            !prevVoid && text[0] === ' ') {\r\n          text = text.substr(1);\r\n        }\r\n\r\n        // `text` might be empty at this point.\r\n        if (!text) {\r\n          node = remove(node);\r\n          continue\r\n        }\r\n\r\n        node.data = text;\r\n\r\n        prevText = node;\r\n      } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\r\n        if (isBlock(node) || node.nodeName === 'BR') {\r\n          if (prevText) {\r\n            prevText.data = prevText.data.replace(/ $/, '');\r\n          }\r\n\r\n          prevText = null;\r\n          prevVoid = false;\r\n        } else if (isVoid(node)) {\r\n          // Avoid trimming space around non-block, non-BR void elements.\r\n          prevText = null;\r\n          prevVoid = true;\r\n        }\r\n      } else {\r\n        node = remove(node);\r\n        continue\r\n      }\r\n\r\n      var nextNode = next(prev, node, isPre);\r\n      prev = node;\r\n      node = nextNode;\r\n    }\r\n\r\n    if (prevText) {\r\n      prevText.data = prevText.data.replace(/ $/, '');\r\n      if (!prevText.data) {\r\n        remove(prevText);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove(node) removes the given node from the DOM and returns the\r\n   * next node in the sequence.\r\n   *\r\n   * @param {Node} node\r\n   * @return {Node} node\r\n   */\r\n  function remove (node) {\r\n    var next = node.nextSibling || node.parentNode;\r\n\r\n    node.parentNode.removeChild(node);\r\n\r\n    return next\r\n  }\r\n\r\n  /**\r\n   * next(prev, current, isPre) returns the next node in the sequence, given the\r\n   * current and previous nodes.\r\n   *\r\n   * @param {Node} prev\r\n   * @param {Node} current\r\n   * @param {Function} isPre\r\n   * @return {Node}\r\n   */\r\n  function next (prev, current, isPre) {\r\n    if ((prev && prev.parentNode === current) || isPre(current)) {\r\n      return current.nextSibling || current.parentNode\r\n    }\r\n\r\n    return current.firstChild || current.nextSibling || current.parentNode\r\n  }\r\n\r\n  /*\r\n   * Set up window for Node.js\r\n   */\r\n\r\n  var root = (typeof window !== 'undefined' ? window : {});\r\n\r\n  /*\r\n   * Parsing HTML strings\r\n   */\r\n\r\n  function canParseHTMLNatively () {\r\n    var Parser = root.DOMParser;\r\n    var canParse = false;\r\n\r\n    // Adapted from https://gist.github.com/1129031\r\n    // Firefox/Opera/IE throw errors on unsupported types\r\n    try {\r\n      // WebKit returns null on unsupported types\r\n      if (new Parser().parseFromString('', 'text/html')) {\r\n        canParse = true;\r\n      }\r\n    } catch (e) {}\r\n\r\n    return canParse\r\n  }\r\n\r\n  function createHTMLParser () {\r\n    var Parser = function () {};\r\n\r\n    {\r\n      var JSDOM = require('jsdom').JSDOM;\r\n      Parser.prototype.parseFromString = function (string) {\r\n        return new JSDOM(string).window.document\r\n      };\r\n    }\r\n    return Parser\r\n  }\r\n\r\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\r\n\r\n  function RootNode (input) {\r\n    var root;\r\n    if (typeof input === 'string') {\r\n      var doc = htmlParser().parseFromString(\r\n        // DOM parsers arrange elements in the <head> and <body>.\r\n        // Wrapping in a custom element ensures elements are reliably arranged in\r\n        // a single element.\r\n        '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\r\n        'text/html'\r\n      );\r\n      root = doc.getElementById('turndown-root');\r\n    } else {\r\n      root = input.cloneNode(true);\r\n    }\r\n    collapseWhitespace({\r\n      element: root,\r\n      isBlock: isBlock,\r\n      isVoid: isVoid\r\n    });\r\n\r\n    return root\r\n  }\r\n\r\n  var _htmlParser;\r\n  function htmlParser () {\r\n    _htmlParser = _htmlParser || new HTMLParser();\r\n    return _htmlParser\r\n  }\r\n\r\n  function Node (node) {\r\n    node.isBlock = isBlock(node);\r\n    node.isCode = node.nodeName.toLowerCase() === 'code' || node.parentNode.isCode;\r\n    node.isBlank = isBlank(node);\r\n    node.flankingWhitespace = flankingWhitespace(node);\r\n    return node\r\n  }\r\n\r\n  function isBlank (node) {\r\n    return (\r\n      ['A', 'TH', 'TD', 'IFRAME', 'SCRIPT', 'AUDIO', 'VIDEO'].indexOf(node.nodeName) === -1 &&\r\n      /^\\s*$/i.test(node.textContent) &&\r\n      !isVoid(node) &&\r\n      !hasVoid(node)\r\n    )\r\n  }\r\n\r\n  function flankingWhitespace (node) {\r\n    var leading = '';\r\n    var trailing = '';\r\n\r\n    if (!node.isBlock) {\r\n      var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent);\r\n      var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent);\r\n\r\n      if (hasLeading && !isFlankedByWhitespace('left', node)) {\r\n        leading = ' ';\r\n      }\r\n      if (hasTrailing && !isFlankedByWhitespace('right', node)) {\r\n        trailing = ' ';\r\n      }\r\n    }\r\n\r\n    return { leading: leading, trailing: trailing }\r\n  }\r\n\r\n  function isFlankedByWhitespace (side, node) {\r\n    var sibling;\r\n    var regExp;\r\n    var isFlanked;\r\n\r\n    if (side === 'left') {\r\n      sibling = node.previousSibling;\r\n      regExp = / $/;\r\n    } else {\r\n      sibling = node.nextSibling;\r\n      regExp = /^ /;\r\n    }\r\n\r\n    if (sibling) {\r\n      if (sibling.nodeType === 3) {\r\n        isFlanked = regExp.test(sibling.nodeValue);\r\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\r\n        isFlanked = regExp.test(sibling.textContent);\r\n      }\r\n    }\r\n    return isFlanked\r\n  }\r\n\r\n  var reduce = Array.prototype.reduce;\r\n  var leadingNewLinesRegExp = /^\\n*/;\r\n  var trailingNewLinesRegExp = /\\n*$/;\r\n  var escapes = [\r\n    [/\\\\/g, '\\\\\\\\'],\r\n    [/\\*/g, '\\\\*'],\r\n    [/^-/g, '\\\\-'],\r\n    [/^\\+ /g, '\\\\+ '],\r\n    [/^(=+)/g, '\\\\$1'],\r\n    [/^(#{1,6}) /g, '\\\\$1 '],\r\n    [/`/g, '\\\\`'],\r\n    [/^~~~/g, '\\\\~~~'],\r\n    [/\\[/g, '\\\\['],\r\n    [/\\]/g, '\\\\]'],\r\n    [/^>/g, '\\\\>'],\r\n    [/_/g, '\\\\_'],\r\n    [/^(\\d+)\\. /g, '$1\\\\. ']\r\n  ];\r\n\r\n  function TurndownService (options) {\r\n    if (!(this instanceof TurndownService)) return new TurndownService(options)\r\n\r\n    var defaults = {\r\n      rules: rules,\r\n      headingStyle: 'setext',\r\n      hr: '* * *',\r\n      bulletListMarker: '*',\r\n      codeBlockStyle: 'indented',\r\n      fence: '```',\r\n      emDelimiter: '_',\r\n      strongDelimiter: '**',\r\n      linkStyle: 'inlined',\r\n      linkReferenceStyle: 'full',\r\n      br: '  ',\r\n      blankReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' : ''\r\n      },\r\n      keepReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\r\n      },\r\n      defaultReplacement: function (content, node) {\r\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\r\n      }\r\n    };\r\n    this.options = extend({}, defaults, options);\r\n    this.rules = new Rules(this.options);\r\n  }\r\n\r\n  TurndownService.prototype = {\r\n    /**\r\n     * The entry point for converting a string or DOM node to Markdown\r\n     * @public\r\n     * @param {String|HTMLElement} input The string or DOM node to convert\r\n     * @returns A Markdown representation of the input\r\n     * @type String\r\n     */\r\n\r\n    turndown: function (input) {\r\n      if (!canConvert(input)) {\r\n        throw new TypeError(\r\n          input + ' is not a string, or an element/document/fragment node.'\r\n        )\r\n      }\r\n\r\n      if (input === '') return ''\r\n\r\n      var output = process.call(this, new RootNode(input));\r\n      return postProcess.call(this, output)\r\n    },\r\n\r\n    /**\r\n     * Add one or more plugins\r\n     * @public\r\n     * @param {Function|Array} plugin The plugin or array of plugins to add\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    use: function (plugin) {\r\n      if (Array.isArray(plugin)) {\r\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\r\n      } else if (typeof plugin === 'function') {\r\n        plugin(this);\r\n      } else {\r\n        throw new TypeError('plugin must be a Function or an Array of Functions')\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Adds a rule\r\n     * @public\r\n     * @param {String} key The unique key of the rule\r\n     * @param {Object} rule The rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    addRule: function (key, rule) {\r\n      this.rules.add(key, rule);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Keep a node (as HTML) that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    keep: function (filter) {\r\n      this.rules.keep(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Remove a node that matches the filter\r\n     * @public\r\n     * @param {String|Array|Function} filter The unique key of the rule\r\n     * @returns The Turndown instance for chaining\r\n     * @type Object\r\n     */\r\n\r\n    remove: function (filter) {\r\n      this.rules.remove(filter);\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Escapes Markdown syntax\r\n     * @public\r\n     * @param {String} string The string to escape\r\n     * @returns A string with Markdown syntax escaped\r\n     * @type String\r\n     */\r\n\r\n    escape: function (string) {\r\n      return escapes.reduce(function (accumulator, escape) {\r\n        return accumulator.replace(escape[0], escape[1])\r\n      }, string)\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reduces a DOM node down to its Markdown string equivalent\r\n   * @private\r\n   * @param {HTMLElement} parentNode The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function process (parentNode) {\r\n    var self = this;\r\n    return reduce.call(parentNode.childNodes, function (output, node) {\r\n      node = new Node(node);\r\n\r\n      var replacement = '';\r\n      if (node.nodeType === 3) {\r\n        replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\r\n      } else if (node.nodeType === 1) {\r\n        replacement = replacementForNode.call(self, node);\r\n      }\r\n\r\n      return join(output, replacement)\r\n    }, '')\r\n  }\r\n\r\n  /**\r\n   * Appends strings as each rule requires and trims the output\r\n   * @private\r\n   * @param {String} output The conversion output\r\n   * @returns A trimmed version of the ouput\r\n   * @type String\r\n   */\r\n\r\n  function postProcess (output) {\r\n    var self = this;\r\n    this.rules.forEach(function (rule) {\r\n      if (typeof rule.append === 'function') {\r\n        output = join(output, rule.append(self.options));\r\n      }\r\n    });\r\n\r\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\r\n  }\r\n\r\n  /**\r\n   * Converts an element node to its Markdown equivalent\r\n   * @private\r\n   * @param {HTMLElement} node The node to convert\r\n   * @returns A Markdown representation of the node\r\n   * @type String\r\n   */\r\n\r\n  function replacementForNode (node) {\r\n    var rule = this.rules.forNode(node);\r\n    var content = process.call(this, node);\r\n    var whitespace = node.flankingWhitespace;\r\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\r\n    return (\r\n      whitespace.leading +\r\n      rule.replacement(content, node, this.options) +\r\n      whitespace.trailing\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Determines the new lines between the current output and the replacement\r\n   * @private\r\n   * @param {String} output The current conversion output\r\n   * @param {String} replacement The string to append to the output\r\n   * @returns The whitespace to separate the current output and the replacement\r\n   * @type String\r\n   */\r\n\r\n  function separatingNewlines (output, replacement) {\r\n    var newlines = [\r\n      output.match(trailingNewLinesRegExp)[0],\r\n      replacement.match(leadingNewLinesRegExp)[0]\r\n    ].sort();\r\n    var maxNewlines = newlines[newlines.length - 1];\r\n    return maxNewlines.length < 2 ? maxNewlines : '\\n\\n'\r\n  }\r\n\r\n  function join (string1, string2) {\r\n    var separator = separatingNewlines(string1, string2);\r\n\r\n    // Remove trailing/leading newlines and replace with separator\r\n    string1 = string1.replace(trailingNewLinesRegExp, '');\r\n    string2 = string2.replace(leadingNewLinesRegExp, '');\r\n\r\n    return string1 + separator + string2\r\n  }\r\n\r\n  /**\r\n   * Determines whether an input can be converted\r\n   * @private\r\n   * @param {String|HTMLElement} input Describe this parameter\r\n   * @returns Describe what it returns\r\n   * @type String|Object|Array|Boolean|Number\r\n   */\r\n\r\n  function canConvert (input) {\r\n    return (\r\n      input != null && (\r\n        typeof input === 'string' ||\r\n        (input.nodeType && (\r\n          input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\r\n        ))\r\n      )\r\n    )\r\n  }\r\n\r\n  return TurndownService;\r\n\r\n});\r\n"]}