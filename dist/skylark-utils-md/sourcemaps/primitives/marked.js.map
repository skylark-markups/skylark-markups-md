{"version":3,"sources":["primitives/marked.js"],"names":["define","Lexer","options","this","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","Error","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","name","val","RegExp","noop","merge","obj","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","src","callback","pending","highlight","lex","e","done","err","out","parse","type","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","item","_tag","lexer","top","bq","next","loose","cap","bull","b","space","l","exec","push","depth","header","split","align","cells","test","ordered","match","indexOf","smartLists","slice","join","sanitize","pre","href","title","charCodeAt","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","inlineLexer"],"mappings":"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","file":"../../primitives/marked.js","sourcesContent":["define([],function() {\r\n  /**\r\n   * marked - a markdown parser\r\n   * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\r\n   * https://github.com/chjj/marked\r\n   */\r\n\r\n  /**\r\n   * Block-Level Grammar\r\n   */\r\n\r\n  var block = {\r\n    newline: /^\\n+/,\r\n    code: /^( {4}[^\\n]+\\n*)+/,\r\n    fences: noop,\r\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\r\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\r\n    nptable: noop,\r\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\r\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\r\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\r\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\r\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\r\n    table: noop,\r\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\r\n    text: /^[^\\n]+/\r\n  };\r\n\r\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\r\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\r\n  block.item = replace(block.item, 'gm')\r\n    (/bull/g, block.bullet)\r\n    ();\r\n\r\n  block.list = replace(block.list)\r\n    (/bull/g, block.bullet)\r\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\r\n    ('def', '\\\\n+(?=' + block.def.source + ')')\r\n    ();\r\n\r\n  block.blockquote = replace(block.blockquote)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  block._tag = '(?!(?:'\r\n    + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\r\n    + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\r\n    + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\r\n\r\n  block.html = replace(block.html)\r\n    ('comment', /<!--[\\s\\S]*?-->/)\r\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\r\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\r\n    (/tag/g, block._tag)\r\n    ();\r\n\r\n  block.paragraph = replace(block.paragraph)\r\n    ('hr', block.hr)\r\n    ('heading', block.heading)\r\n    ('lheading', block.lheading)\r\n    ('blockquote', block.blockquote)\r\n    ('tag', '<' + block._tag)\r\n    ('def', block.def)\r\n    ();\r\n\r\n  /**\r\n   * Normal Block Grammar\r\n   */\r\n\r\n  block.normal = merge({}, block);\r\n\r\n  /**\r\n   * GFM Block Grammar\r\n   */\r\n\r\n  block.gfm = merge({}, block.normal, {\r\n    fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\r\n    paragraph: /^/\r\n  });\r\n\r\n  block.gfm.paragraph = replace(block.paragraph)\r\n    ('(?!', '(?!'\r\n      + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\r\n      + block.list.source.replace('\\\\1', '\\\\3') + '|')\r\n    ();\r\n\r\n  /**\r\n   * GFM + Tables Block Grammar\r\n   */\r\n\r\n  block.tables = merge({}, block.gfm, {\r\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\r\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\r\n  });\r\n\r\n  /**\r\n   * Block Lexer\r\n   */\r\n\r\n  function Lexer(options) {\r\n    this.tokens = [];\r\n    this.tokens.links = {};\r\n    this.options = options || marked.defaults;\r\n    this.rules = block.normal;\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.tables) {\r\n        this.rules = block.tables;\r\n      } else {\r\n        this.rules = block.gfm;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Block Rules\r\n   */\r\n\r\n  Lexer.rules = block;\r\n\r\n  /**\r\n   * Static Lex Method\r\n   */\r\n\r\n  Lexer.lex = function(src, options) {\r\n    var lexer = new Lexer(options);\r\n    return lexer.lex(src);\r\n  };\r\n\r\n  /**\r\n   * Preprocessing\r\n   */\r\n\r\n  Lexer.prototype.lex = function(src) {\r\n    src = src\r\n      .replace(/\\r\\n|\\r/g, '\\n')\r\n      .replace(/\\t/g, '    ')\r\n      .replace(/\\u00a0/g, ' ')\r\n      .replace(/\\u2424/g, '\\n');\r\n\r\n    return this.token(src, true);\r\n  };\r\n\r\n  /**\r\n   * Lexing\r\n   */\r\n\r\n  Lexer.prototype.token = function(src, top, bq) {\r\n    var src = src.replace(/^ +$/gm, '')\r\n      , next\r\n      , loose\r\n      , cap\r\n      , bull\r\n      , b\r\n      , item\r\n      , space\r\n      , i\r\n      , l;\r\n\r\n    while (src) {\r\n      // newline\r\n      if (cap = this.rules.newline.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[0].length > 1) {\r\n          this.tokens.push({\r\n            type: 'space'\r\n          });\r\n        }\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        cap = cap[0].replace(/^ {4}/gm, '');\r\n        this.tokens.push({\r\n          type: 'code',\r\n          text: !this.options.pedantic\r\n            ? cap.replace(/\\n+$/, '')\r\n            : cap\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // fences (gfm)\r\n      if (cap = this.rules.fences.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'code',\r\n          lang: cap[2],\r\n          text: cap[3]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // heading\r\n      if (cap = this.rules.heading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[1].length,\r\n          text: cap[2]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // table no leading pipe (gfm)\r\n      if (top && (cap = this.rules.nptable.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i].split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // lheading\r\n      if (cap = this.rules.lheading.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'heading',\r\n          depth: cap[2] === '=' ? 1 : 2,\r\n          text: cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // hr\r\n      if (cap = this.rules.hr.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'hr'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // blockquote\r\n      if (cap = this.rules.blockquote.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_start'\r\n        });\r\n\r\n        cap = cap[0].replace(/^ *> ?/gm, '');\r\n\r\n        // Pass `top` to keep the current\r\n        // \"toplevel\" state. This is exactly\r\n        // how markdown.pl works.\r\n        this.token(cap, top, true);\r\n\r\n        this.tokens.push({\r\n          type: 'blockquote_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // list\r\n      if (cap = this.rules.list.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        bull = cap[2];\r\n\r\n        this.tokens.push({\r\n          type: 'list_start',\r\n          ordered: bull.length > 1\r\n        });\r\n\r\n        // Get each top-level item.\r\n        cap = cap[0].match(this.rules.item);\r\n\r\n        next = false;\r\n        l = cap.length;\r\n        i = 0;\r\n\r\n        for (; i < l; i++) {\r\n          item = cap[i];\r\n\r\n          // Remove the list item's bullet\r\n          // so it is seen as the next token.\r\n          space = item.length;\r\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\r\n\r\n          // Outdent whatever the\r\n          // list item contains. Hacky.\r\n          if (~item.indexOf('\\n ')) {\r\n            space -= item.length;\r\n            item = !this.options.pedantic\r\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\r\n              : item.replace(/^ {1,4}/gm, '');\r\n          }\r\n\r\n          // Determine whether the next list item belongs here.\r\n          // Backpedal if it does not belong in this list.\r\n          if (this.options.smartLists && i !== l - 1) {\r\n            b = block.bullet.exec(cap[i + 1])[0];\r\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\r\n              src = cap.slice(i + 1).join('\\n') + src;\r\n              i = l - 1;\r\n            }\r\n          }\r\n\r\n          // Determine whether item is loose or not.\r\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\r\n          // for discount behavior.\r\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\r\n          if (i !== l - 1) {\r\n            next = item.charAt(item.length - 1) === '\\n';\r\n            if (!loose) loose = next;\r\n          }\r\n\r\n          this.tokens.push({\r\n            type: loose\r\n              ? 'loose_item_start'\r\n              : 'list_item_start'\r\n          });\r\n\r\n          // Recurse.\r\n          this.token(item, false, bq);\r\n\r\n          this.tokens.push({\r\n            type: 'list_item_end'\r\n          });\r\n        }\r\n\r\n        this.tokens.push({\r\n          type: 'list_end'\r\n        });\r\n\r\n        continue;\r\n      }\r\n\r\n      // html\r\n      if (cap = this.rules.html.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: this.options.sanitize\r\n            ? 'paragraph'\r\n            : 'html',\r\n          pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // def\r\n      if ((!bq && top) && (cap = this.rules.def.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.links[cap[1].toLowerCase()] = {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        };\r\n        continue;\r\n      }\r\n\r\n      // table (gfm)\r\n      if (top && (cap = this.rules.table.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n\r\n        item = {\r\n          type: 'table',\r\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\r\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\r\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\r\n        };\r\n\r\n        for (i = 0; i < item.align.length; i++) {\r\n          if (/^ *-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'right';\r\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\r\n            item.align[i] = 'center';\r\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\r\n            item.align[i] = 'left';\r\n          } else {\r\n            item.align[i] = null;\r\n          }\r\n        }\r\n\r\n        for (i = 0; i < item.cells.length; i++) {\r\n          item.cells[i] = item.cells[i]\r\n            .replace(/^ *\\| *| *\\| *$/g, '')\r\n            .split(/ *\\| */);\r\n        }\r\n\r\n        this.tokens.push(item);\r\n\r\n        continue;\r\n      }\r\n\r\n      // top-level paragraph\r\n      if (top && (cap = this.rules.paragraph.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'paragraph',\r\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\r\n            ? cap[1].slice(0, -1)\r\n            : cap[1]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        // Top-level should never reach here.\r\n        src = src.substring(cap[0].length);\r\n        this.tokens.push({\r\n          type: 'text',\r\n          text: cap[0]\r\n        });\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return this.tokens;\r\n  };\r\n\r\n  /**\r\n   * Inline-Level Grammar\r\n   */\r\n\r\n  var inline = {\r\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\r\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\r\n    url: noop,\r\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\r\n    link: /^!?\\[(inside)\\]\\(href\\)/,\r\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\r\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\r\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\r\n    em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\r\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\r\n    br: /^ {2,}\\n(?!\\s*$)/,\r\n    del: noop,\r\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\r\n  };\r\n\r\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\r\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\r\n\r\n  inline.link = replace(inline.link)\r\n    ('inside', inline._inside)\r\n    ('href', inline._href)\r\n    ();\r\n\r\n  inline.reflink = replace(inline.reflink)\r\n    ('inside', inline._inside)\r\n    ();\r\n\r\n  /**\r\n   * Normal Inline Grammar\r\n   */\r\n\r\n  inline.normal = merge({}, inline);\r\n\r\n  /**\r\n   * Pedantic Inline Grammar\r\n   */\r\n\r\n  inline.pedantic = merge({}, inline.normal, {\r\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\r\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\r\n  });\r\n\r\n  /**\r\n   * GFM Inline Grammar\r\n   */\r\n\r\n  inline.gfm = merge({}, inline.normal, {\r\n    escape: replace(inline.escape)('])', '~|])')(),\r\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\r\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\r\n    text: replace(inline.text)\r\n      (']|', '~]|')\r\n      ('|', '|https?://|')\r\n      ()\r\n  });\r\n\r\n  /**\r\n   * GFM + Line Breaks Inline Grammar\r\n   */\r\n\r\n  inline.breaks = merge({}, inline.gfm, {\r\n    br: replace(inline.br)('{2,}', '*')(),\r\n    text: replace(inline.gfm.text)('{2,}', '*')()\r\n  });\r\n\r\n  /**\r\n   * Inline Lexer & Compiler\r\n   */\r\n\r\n  function InlineLexer(links, options) {\r\n    this.options = options || marked.defaults;\r\n    this.links = links;\r\n    this.rules = inline.normal;\r\n    this.renderer = this.options.renderer || new Renderer;\r\n    this.renderer.options = this.options;\r\n\r\n    if (!this.links) {\r\n      throw new\r\n        Error('Tokens array requires a `links` property.');\r\n    }\r\n\r\n    if (this.options.gfm) {\r\n      if (this.options.breaks) {\r\n        this.rules = inline.breaks;\r\n      } else {\r\n        this.rules = inline.gfm;\r\n      }\r\n    } else if (this.options.pedantic) {\r\n      this.rules = inline.pedantic;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expose Inline Rules\r\n   */\r\n\r\n  InlineLexer.rules = inline;\r\n\r\n  /**\r\n   * Static Lexing/Compiling Method\r\n   */\r\n\r\n  InlineLexer.output = function(src, links, options) {\r\n    var inline = new InlineLexer(links, options);\r\n    return inline.output(src);\r\n  };\r\n\r\n  /**\r\n   * Lexing/Compiling\r\n   */\r\n\r\n  InlineLexer.prototype.output = function(src) {\r\n    var out = ''\r\n      , link\r\n      , text\r\n      , href\r\n      , cap;\r\n\r\n    while (src) {\r\n      // escape\r\n      if (cap = this.rules.escape.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += cap[1];\r\n        continue;\r\n      }\r\n\r\n      // autolink\r\n      if (cap = this.rules.autolink.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        if (cap[2] === '@') {\r\n          text = cap[1].charAt(6) === ':'\r\n            ? this.mangle(cap[1].substring(7))\r\n            : this.mangle(cap[1]);\r\n          href = this.mangle('mailto:') + text;\r\n        } else {\r\n          text = escape(cap[1]);\r\n          href = text;\r\n        }\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // url (gfm)\r\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        text = escape(cap[1]);\r\n        href = text;\r\n        out += this.renderer.link(href, null, text);\r\n        continue;\r\n      }\r\n\r\n      // tag\r\n      if (cap = this.rules.tag.exec(src)) {\r\n        if (!this.inLink && /^<a /i.test(cap[0])) {\r\n          this.inLink = true;\r\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\r\n          this.inLink = false;\r\n        }\r\n        src = src.substring(cap[0].length);\r\n        out += this.options.sanitize\r\n          ? escape(cap[0])\r\n          : cap[0];\r\n        continue;\r\n      }\r\n\r\n      // link\r\n      if (cap = this.rules.link.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, {\r\n          href: cap[2],\r\n          title: cap[3]\r\n        });\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // reflink, nolink\r\n      if ((cap = this.rules.reflink.exec(src))\r\n          || (cap = this.rules.nolink.exec(src))) {\r\n        src = src.substring(cap[0].length);\r\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\r\n        link = this.links[link.toLowerCase()];\r\n        if (!link || !link.href) {\r\n          out += cap[0].charAt(0);\r\n          src = cap[0].substring(1) + src;\r\n          continue;\r\n        }\r\n        this.inLink = true;\r\n        out += this.outputLink(cap, link);\r\n        this.inLink = false;\r\n        continue;\r\n      }\r\n\r\n      // strong\r\n      if (cap = this.rules.strong.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // em\r\n      if (cap = this.rules.em.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // code\r\n      if (cap = this.rules.code.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.codespan(escape(cap[2], true));\r\n        continue;\r\n      }\r\n\r\n      // br\r\n      if (cap = this.rules.br.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.br();\r\n        continue;\r\n      }\r\n\r\n      // del (gfm)\r\n      if (cap = this.rules.del.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += this.renderer.del(this.output(cap[1]));\r\n        continue;\r\n      }\r\n\r\n      // text\r\n      if (cap = this.rules.text.exec(src)) {\r\n        src = src.substring(cap[0].length);\r\n        out += escape(this.smartypants(cap[0]));\r\n        continue;\r\n      }\r\n\r\n      if (src) {\r\n        throw new\r\n          Error('Infinite loop on byte: ' + src.charCodeAt(0));\r\n      }\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Compile Link\r\n   */\r\n\r\n  InlineLexer.prototype.outputLink = function(cap, link) {\r\n    var href = escape(link.href)\r\n      , title = link.title ? escape(link.title) : null;\r\n\r\n    return cap[0].charAt(0) !== '!'\r\n      ? this.renderer.link(href, title, this.output(cap[1]))\r\n      : this.renderer.image(href, title, escape(cap[1]));\r\n  };\r\n\r\n  /**\r\n   * Smartypants Transformations\r\n   */\r\n\r\n  InlineLexer.prototype.smartypants = function(text) {\r\n    if (!this.options.smartypants) return text;\r\n    return text\r\n      // em-dashes\r\n      .replace(/--/g, '\\u2014')\r\n      // opening singles\r\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\r\n      // closing singles & apostrophes\r\n      .replace(/'/g, '\\u2019')\r\n      // opening doubles\r\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\r\n      // closing doubles\r\n      .replace(/\"/g, '\\u201d')\r\n      // ellipses\r\n      .replace(/\\.{3}/g, '\\u2026');\r\n  };\r\n\r\n  /**\r\n   * Mangle Links\r\n   */\r\n\r\n  InlineLexer.prototype.mangle = function(text) {\r\n    var out = ''\r\n      , l = text.length\r\n      , i = 0\r\n      , ch;\r\n\r\n    for (; i < l; i++) {\r\n      ch = text.charCodeAt(i);\r\n      if (Math.random() > 0.5) {\r\n        ch = 'x' + ch.toString(16);\r\n      }\r\n      out += '&#' + ch + ';';\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Renderer\r\n   */\r\n\r\n  function Renderer(options) {\r\n    this.options = options || {};\r\n  }\r\n\r\n  Renderer.prototype.code = function(code, lang, escaped) {\r\n    if (this.options.highlight) {\r\n      var out = this.options.highlight(code, lang);\r\n      if (out != null && out !== code) {\r\n        escaped = true;\r\n        code = out;\r\n      }\r\n    }\r\n\r\n    if (!lang) {\r\n      return '<pre><code>'\r\n        + (escaped ? code : escape(code, true))\r\n        + '\\n</code></pre>';\r\n    }\r\n\r\n    return '<pre><code class=\"'\r\n      + this.options.langPrefix\r\n      + escape(lang, true)\r\n      + '\">'\r\n      + (escaped ? code : escape(code, true))\r\n      + '\\n</code></pre>\\n';\r\n  };\r\n\r\n  Renderer.prototype.blockquote = function(quote) {\r\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\r\n  };\r\n\r\n  Renderer.prototype.html = function(html) {\r\n    return html;\r\n  };\r\n\r\n  Renderer.prototype.heading = function(text, level, raw) {\r\n    return '<h'\r\n      + level\r\n      + ' id=\"'\r\n      + this.options.headerPrefix\r\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\r\n      + '\">'\r\n      + text\r\n      + '</h'\r\n      + level\r\n      + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.hr = function() {\r\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.list = function(body, ordered) {\r\n    var type = ordered ? 'ol' : 'ul';\r\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\r\n  };\r\n\r\n  Renderer.prototype.listitem = function(text) {\r\n    return '<li>' + text + '</li>\\n';\r\n  };\r\n\r\n  Renderer.prototype.paragraph = function(text) {\r\n    return '<p>' + text + '</p>\\n';\r\n  };\r\n\r\n  Renderer.prototype.table = function(header, body) {\r\n    return '<table>\\n'\r\n      + '<thead>\\n'\r\n      + header\r\n      + '</thead>\\n'\r\n      + '<tbody>\\n'\r\n      + body\r\n      + '</tbody>\\n'\r\n      + '</table>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablerow = function(content) {\r\n    return '<tr>\\n' + content + '</tr>\\n';\r\n  };\r\n\r\n  Renderer.prototype.tablecell = function(content, flags) {\r\n    var type = flags.header ? 'th' : 'td';\r\n    var tag = flags.align\r\n      ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\r\n      : '<' + type + '>';\r\n    return tag + content + '</' + type + '>\\n';\r\n  };\r\n\r\n  // span level renderer\r\n  Renderer.prototype.strong = function(text) {\r\n    return '<strong>' + text + '</strong>';\r\n  };\r\n\r\n  Renderer.prototype.em = function(text) {\r\n    return '<em>' + text + '</em>';\r\n  };\r\n\r\n  Renderer.prototype.codespan = function(text) {\r\n    return '<code>' + text + '</code>';\r\n  };\r\n\r\n  Renderer.prototype.br = function() {\r\n    return this.options.xhtml ? '<br/>' : '<br>';\r\n  };\r\n\r\n  Renderer.prototype.del = function(text) {\r\n    return '<del>' + text + '</del>';\r\n  };\r\n\r\n  Renderer.prototype.link = function(href, title, text) {\r\n    if (this.options.sanitize) {\r\n      try {\r\n        var prot = decodeURIComponent(unescape(href))\r\n          .replace(/[^\\w:]/g, '')\r\n          .toLowerCase();\r\n      } catch (e) {\r\n        return '';\r\n      }\r\n      if (prot.indexOf('javascript:') === 0) {\r\n        return '';\r\n      }\r\n    }\r\n    var out = '<a href=\"' + href + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += '>' + text + '</a>';\r\n    return out;\r\n  };\r\n\r\n  Renderer.prototype.image = function(href, title, text) {\r\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\r\n    if (title) {\r\n      out += ' title=\"' + title + '\"';\r\n    }\r\n    out += this.options.xhtml ? '/>' : '>';\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Parsing & Compiling\r\n   */\r\n\r\n  function Parser(options) {\r\n    this.tokens = [];\r\n    this.token = null;\r\n    this.options = options || marked.defaults;\r\n    this.options.renderer = this.options.renderer || new Renderer;\r\n    this.renderer = this.options.renderer;\r\n    this.renderer.options = this.options;\r\n  }\r\n\r\n  /**\r\n   * Static Parse Method\r\n   */\r\n\r\n  Parser.parse = function(src, options, renderer) {\r\n    var parser = new Parser(options, renderer);\r\n    return parser.parse(src);\r\n  };\r\n\r\n  /**\r\n   * Parse Loop\r\n   */\r\n\r\n  Parser.prototype.parse = function(src) {\r\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\r\n    this.tokens = src.reverse();\r\n\r\n    var out = '';\r\n    while (this.next()) {\r\n      out += this.tok();\r\n    }\r\n\r\n    return out;\r\n  };\r\n\r\n  /**\r\n   * Next Token\r\n   */\r\n\r\n  Parser.prototype.next = function() {\r\n    return this.token = this.tokens.pop();\r\n  };\r\n\r\n  /**\r\n   * Preview Next Token\r\n   */\r\n\r\n  Parser.prototype.peek = function() {\r\n    return this.tokens[this.tokens.length - 1] || 0;\r\n  };\r\n\r\n  /**\r\n   * Parse Text Tokens\r\n   */\r\n\r\n  Parser.prototype.parseText = function() {\r\n    var body = this.token.text;\r\n\r\n    while (this.peek().type === 'text') {\r\n      body += '\\n' + this.next().text;\r\n    }\r\n\r\n    return this.inline.output(body);\r\n  };\r\n\r\n  /**\r\n   * Parse Current Token\r\n   */\r\n\r\n  Parser.prototype.tok = function() {\r\n    switch (this.token.type) {\r\n      case 'space': {\r\n        return '';\r\n      }\r\n      case 'hr': {\r\n        return this.renderer.hr();\r\n      }\r\n      case 'heading': {\r\n        return this.renderer.heading(\r\n          this.inline.output(this.token.text),\r\n          this.token.depth,\r\n          this.token.text);\r\n      }\r\n      case 'code': {\r\n        return this.renderer.code(this.token.text,\r\n          this.token.lang,\r\n          this.token.escaped);\r\n      }\r\n      case 'table': {\r\n        var header = ''\r\n          , body = ''\r\n          , i\r\n          , row\r\n          , cell\r\n          , flags\r\n          , j;\r\n\r\n        // header\r\n        cell = '';\r\n        for (i = 0; i < this.token.header.length; i++) {\r\n          flags = { header: true, align: this.token.align[i] };\r\n          cell += this.renderer.tablecell(\r\n            this.inline.output(this.token.header[i]),\r\n            { header: true, align: this.token.align[i] }\r\n          );\r\n        }\r\n        header += this.renderer.tablerow(cell);\r\n\r\n        for (i = 0; i < this.token.cells.length; i++) {\r\n          row = this.token.cells[i];\r\n\r\n          cell = '';\r\n          for (j = 0; j < row.length; j++) {\r\n            cell += this.renderer.tablecell(\r\n              this.inline.output(row[j]),\r\n              { header: false, align: this.token.align[j] }\r\n            );\r\n          }\r\n\r\n          body += this.renderer.tablerow(cell);\r\n        }\r\n        return this.renderer.table(header, body);\r\n      }\r\n      case 'blockquote_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'blockquote_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.blockquote(body);\r\n      }\r\n      case 'list_start': {\r\n        var body = ''\r\n          , ordered = this.token.ordered;\r\n\r\n        while (this.next().type !== 'list_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.list(body, ordered);\r\n      }\r\n      case 'list_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.token.type === 'text'\r\n            ? this.parseText()\r\n            : this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'loose_item_start': {\r\n        var body = '';\r\n\r\n        while (this.next().type !== 'list_item_end') {\r\n          body += this.tok();\r\n        }\r\n\r\n        return this.renderer.listitem(body);\r\n      }\r\n      case 'html': {\r\n        var html = !this.token.pre && !this.options.pedantic\r\n          ? this.inline.output(this.token.text)\r\n          : this.token.text;\r\n        return this.renderer.html(html);\r\n      }\r\n      case 'paragraph': {\r\n        return this.renderer.paragraph(this.inline.output(this.token.text));\r\n      }\r\n      case 'text': {\r\n        return this.renderer.paragraph(this.parseText());\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  function escape(html, encode) {\r\n    return html\r\n      .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#39;');\r\n  }\r\n\r\n  function unescape(html) {\r\n    return html.replace(/&([#\\w]+);/g, function(_, n) {\r\n      n = n.toLowerCase();\r\n      if (n === 'colon') return ':';\r\n      if (n.charAt(0) === '#') {\r\n        return n.charAt(1) === 'x'\r\n          ? String.fromCharCode(parseInt(n.substring(2), 16))\r\n          : String.fromCharCode(+n.substring(1));\r\n      }\r\n      return '';\r\n    });\r\n  }\r\n\r\n  function replace(regex, opt) {\r\n    regex = regex.source;\r\n    opt = opt || '';\r\n    return function self(name, val) {\r\n      if (!name) return new RegExp(regex, opt);\r\n      val = val.source || val;\r\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\r\n      regex = regex.replace(name, val);\r\n      return self;\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n  noop.exec = noop;\r\n\r\n  function merge(obj) {\r\n    var i = 1\r\n      , target\r\n      , key;\r\n\r\n    for (; i < arguments.length; i++) {\r\n      target = arguments[i];\r\n      for (key in target) {\r\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\r\n          obj[key] = target[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n\r\n  /**\r\n   * Marked\r\n   */\r\n\r\n  function marked(src, opt, callback) {\r\n    if (callback || typeof opt === 'function') {\r\n      if (!callback) {\r\n        callback = opt;\r\n        opt = null;\r\n      }\r\n\r\n      opt = merge({}, marked.defaults, opt || {});\r\n\r\n      var highlight = opt.highlight\r\n        , tokens\r\n        , pending\r\n        , i = 0;\r\n\r\n      try {\r\n        tokens = Lexer.lex(src, opt)\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n\r\n      pending = tokens.length;\r\n\r\n      var done = function(err) {\r\n        if (err) {\r\n          opt.highlight = highlight;\r\n          return callback(err);\r\n        }\r\n\r\n        var out;\r\n\r\n        try {\r\n          out = Parser.parse(tokens, opt);\r\n        } catch (e) {\r\n          err = e;\r\n        }\r\n\r\n        opt.highlight = highlight;\r\n\r\n        return err\r\n          ? callback(err)\r\n          : callback(null, out);\r\n      };\r\n\r\n      if (!highlight || highlight.length < 3) {\r\n        return done();\r\n      }\r\n\r\n      delete opt.highlight;\r\n\r\n      if (!pending) return done();\r\n\r\n      for (; i < tokens.length; i++) {\r\n        (function(token) {\r\n          if (token.type !== 'code') {\r\n            return --pending || done();\r\n          }\r\n          return highlight(token.text, token.lang, function(err, code) {\r\n            if (err) return done(err);\r\n            if (code == null || code === token.text) {\r\n              return --pending || done();\r\n            }\r\n            token.text = code;\r\n            token.escaped = true;\r\n            --pending || done();\r\n          });\r\n        })(tokens[i]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    try {\r\n      if (opt) opt = merge({}, marked.defaults, opt);\r\n      return Parser.parse(Lexer.lex(src, opt), opt);\r\n    } catch (e) {\r\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\r\n      if ((opt || marked.defaults).silent) {\r\n        return '<p>An error occured:</p><pre>'\r\n          + escape(e.message + '', true)\r\n          + '</pre>';\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Options\r\n   */\r\n\r\n  marked.options =\r\n  marked.setOptions = function(opt) {\r\n    merge(marked.defaults, opt);\r\n    return marked;\r\n  };\r\n\r\n  marked.defaults = {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: false,\r\n    silent: false,\r\n    highlight: null,\r\n    langPrefix: 'lang-',\r\n    smartypants: false,\r\n    headerPrefix: '',\r\n    renderer: new Renderer,\r\n    xhtml: false\r\n  };\r\n\r\n  /**\r\n   * Expose\r\n   */\r\n\r\n  marked.Parser = Parser;\r\n  marked.parser = Parser.parse;\r\n\r\n  marked.Renderer = Renderer;\r\n\r\n  marked.Lexer = Lexer;\r\n  marked.lexer = Lexer.lex;\r\n\r\n  marked.InlineLexer = InlineLexer;\r\n  marked.inlineLexer = InlineLexer.output;\r\n\r\n  marked.parse = marked;\r\n\r\n  return marked;\r\n});"]}